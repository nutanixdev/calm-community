{
  "spec": {
    "name": "DslCommunityRunbook",
    "description": "",
    "resources": {
      "endpoint_definition_list": [],
      "credential_definition_list": [],
      "client_attrs": {},
      "runbook": {
        "name": "DslCommunityRunbook_runbook",
        "description": "",
        "main_task_local_reference": {
          "kind": "app_task",
          "name": "DslCommunityRunbook_dag"
        },
        "task_definition_list": [
          {
            "name": "DslCommunityRunbook_dag",
            "description": "",
            "type": "DAG",
            "attrs": {
              "edges": [
                {
                  "from_task_reference": {
                    "kind": "app_task",
                    "name": "Delay"
                  },
                  "to_task_reference": {
                    "kind": "app_task",
                    "name": "Generate content"
                  }
                }
              ]
            },
            "child_tasks_local_reference_list": [
              {
                "kind": "app_task",
                "name": "Delay"
              },
              {
                "kind": "app_task",
                "name": "Generate content"
              }
            ],
            "variable_list": [],
            "retries": "",
            "timeout_secs": ""
          },
          {
            "name": "Delay",
            "description": "",
            "type": "DELAY",
            "attrs": {
              "interval_secs": 1
            },
            "child_tasks_local_reference_list": [],
            "variable_list": [],
            "retries": "",
            "timeout_secs": ""
          },
          {
            "name": "Generate content",
            "description": "",
            "type": "EXEC",
            "attrs": {
              "script_type": "static",
              "script": "import requests\nfrom datetime import datetime\n\nCONTENT_URL = \"@@{ntnx_calm_object_uri}@@\"\nCONTENT_KIND = \"@@{ntnx_calm_object_kinds}@@\"\nCONTENT_NAME = \"@@{ntnx_calm_object_kind}@@\"\n\n\nbase_url = \"https://localhost:9440/api/nutanix/v3\"\nauthstr = \"Bearer @@{calm_jwt}@@\"\nproject = \"@@{ntnx_calm_import_to_project}@@\"\n\n# Get Project UUID\nheaders = {\"Content-Type\": \"application/json\"}\nheaders.update({\"Authorization\": authstr})\nendpoint_url = \"/\".join((base_url, \"projects\", \"list\"))\npayload = {\"filter\": \"name=={project}\".format(project=project)}\n\nres = requests.post(endpoint_url,headers=headers,json=payload,verify=False)\nproject_uuid = res.json()[\"entities\"][0][\"metadata\"][\"uuid\"]\n\n# Download Content\nheaders.pop(\"Authorization\")\nres = requests.get(CONTENT_URL, headers=headers)\ncontent = res.content\n\n# Upload Content\nheaders.update({\"Authorization\": authstr})\n\nparams = {\"filter\": \"name=={};state!=DELETED\".format(CONTENT_NAME)}\nendpoint_url = \"/\".join((base_url, CONTENT_KIND, \"list\"))\nres = requests.post(endpoint_url,headers=headers,json=params,verify=False)\nif len(res.json()[\"entities\"]) > 0:\n    if @@{ntnx_calm_object_overwrite}@@:\n        bp_uuid = res.json()[\"entities\"][0][\"metadata\"][\"uuid\"]\n        endpoint_url = \"/\".join((base_url, CONTENT_KIND, bp_uuid))\n        res = requests.delete(endpoint_url,headers=headers,verify=False)\n    else:\n        CONTENT_NAME = CONTENT_NAME + \"_\" + datetime.now().strftime(\"%s\")\n\nheaders.pop(\"Content-Type\")\nendpoint_url = \"/\".join((base_url, CONTENT_KIND, \"import_file\"))\npayload = {\"filter\": \"name=={project}\".format(project=project)}\nfiles = {'file': ('blob', content)}\npayload = {\"name\": CONTENT_NAME, \"project_uuid\": project_uuid}\n\nres = requests.post(endpoint_url,headers=headers,files=files,data=payload,verify=False)\n\nif res.ok:\n    print(\"Content uploaded\")\n    \nelse:\n    print(\"Request failed\", res.text)\n    exit(1)"
            },
            "child_tasks_local_reference_list": [],
            "variable_list": [],
            "retries": "",
            "timeout_secs": ""
          }
        ],
        "variable_list": [
          {
            "name": "ntnx_calm_catalog_base_url",
            "description": "main branch URL raw path",
            "type": "LOCAL",
            "label": "",
            "attrs": {},
            "val_type": "STRING",
            "value": "https://raw.githubusercontent.com/nutanixdev/calm-community/main",
            "data_type": "BASE",
            "is_hidden": true,
            "is_mandatory": false
          },
          {
            "name": "ntnx_calm_catalog_example_folder",
            "description": "Folder with all the examples",
            "type": "LOCAL",
            "label": "",
            "attrs": {},
            "val_type": "STRING",
            "value": "examples",
            "data_type": "BASE",
            "is_hidden": true,
            "is_mandatory": false
          },
          {
            "name": "ntnx_calm_catalog_metadata_filename",
            "description": "content library metadata (what Calm Importer reads for presenting options to the user)",
            "type": "LOCAL",
            "label": "",
            "attrs": {},
            "val_type": "STRING",
            "value": "metadata.json",
            "data_type": "BASE",
            "is_hidden": true,
            "is_mandatory": false
          },
          {
            "name": "ntnx_calm_catalog_metadata_url",
            "description": "",
            "type": "LOCAL",
            "label": "Calm Importer - metadata URL (for reference)",
            "attrs": {},
            "val_type": "STRING",
            "value": "@@{ntnx_calm_catalog_base_url}@@/@@{ntnx_calm_catalog_metadata_filename}@@",
            "data_type": "BASE",
            "is_hidden": false,
            "is_mandatory": false
          },
          {
            "name": "ntnx_calm_catalog_examples_url",
            "description": "",
            "type": "LOCAL",
            "label": "Calm Importer - examples folder URL (for reference)",
            "attrs": {},
            "val_type": "STRING",
            "value": "@@{ntnx_calm_catalog_base_url}@@/@@{ntnx_calm_catalog_example_folder}@@",
            "data_type": "BASE",
            "is_hidden": false,
            "is_mandatory": false
          },
          {
            "name": "ntnx_calm_importer_current_version",
            "description": "DO NOT CHANGE. Used for future Calm Importer upgrades",
            "type": "LOCAL",
            "label": "",
            "attrs": {},
            "val_type": "STRING",
            "value": "1.0",
            "data_type": "BASE",
            "is_hidden": true,
            "is_mandatory": false
          },
          {
            "name": "ntnx_calm_import_to_project",
            "description": "In what project the content will be imported to",
            "type": "LOCAL",
            "label": "Self-Service Project",
            "attrs": {},
            "val_type": "STRING",
            "value": "default",
            "data_type": "BASE",
            "editables": {
              "value": true
            },
            "is_hidden": false,
            "is_mandatory": true
          },
          {
            "name": "ntnx_calm_check_version",
            "description": "",
            "type": "EXEC_LOCAL",
            "label": "Calm Importer - upgrade available?",
            "attrs": {},
            "val_type": "STRING",
            "value": "",
            "data_type": "BASE",
            "editables": {
              "value": true
            },
            "options": {
              "type": "EXEC",
              "attrs": {
                "script_type": "static",
                "script": "import requests\n\n# CURRENT_VERSION = \"1.0\"\nCURRENT_VERSION = \"@@{ntnx_calm_importer_current_version}@@\"\nMETADATA_URL = \"@@{ntnx_calm_catalog_metadata_url}@@\"\n\n\nr = requests.get(METADATA_URL)\n\nif r.ok:\n    resp = r.json()\n    latest_version = resp[\"version\"]\nelse:\n    print(\"Get Calm importer version request failed\", r.text)\n    exit(1)\n\n\nif CURRENT_VERSION != latest_version:\n    results = [\n        \"Skip update\",\n        \"Install update {}\".format(latest_version)\n\n    ]\n    print(\",\".join(results))\nelse:\n    print(\"Latest version already installed\")",
                "type": "EXEC"
              }
            },
            "is_hidden": false,
            "is_mandatory": true
          },
          {
            "name": "ntnx_calm_object_kinds",
            "description": "",
            "type": "HTTP_LOCAL",
            "label": "Kind of Self-Service content to import",
            "attrs": {},
            "val_type": "STRING",
            "value": "",
            "data_type": "BASE",
            "editables": {
              "value": true
            },
            "options": {
              "type": "HTTP",
              "attrs": {
                "method": "GET",
                "url": "@@{ntnx_calm_catalog_metadata_url}@@",
                "authentication": {
                  "auth_type": "none"
                },
                "connection_timeout": 120,
                "tls_verify": true,
                "retry_count": 1,
                "retry_interval": 10,
                "content_type": "application/json",
                "expected_response_params": [
                  {
                    "status": "SUCCESS",
                    "code": 200
                  }
                ],
                "response_paths": {
                  "ntnx_calm_object_kinds": "$.referenceKinds[*]"
                },
                "type": "HTTP"
              }
            },
            "is_hidden": false,
            "is_mandatory": true
          },
          {
            "name": "ntnx_calm_object_kind",
            "description": "",
            "type": "HTTP_LOCAL",
            "label": "Content name",
            "attrs": {},
            "val_type": "STRING",
            "value": "",
            "data_type": "BASE",
            "editables": {
              "value": true
            },
            "options": {
              "type": "HTTP",
              "attrs": {
                "method": "GET",
                "url": "@@{ntnx_calm_catalog_metadata_url}@@",
                "authentication": {
                  "auth_type": "none"
                },
                "connection_timeout": 120,
                "tls_verify": true,
                "retry_count": 1,
                "retry_interval": 10,
                "content_type": "application/json",
                "expected_response_params": [
                  {
                    "status": "SUCCESS",
                    "code": 200
                  }
                ],
                "response_paths": {
                  "ntnx_calm_object_kind": "$.entities[?(@.kind == '@@{ntnx_calm_object_kinds}@@')].metadata.name"
                },
                "type": "HTTP"
              }
            },
            "is_hidden": false,
            "is_mandatory": true
          },
          {
            "name": "ntnx_calm_object_uri",
            "description": "",
            "type": "HTTP_LOCAL",
            "label": "Content direct link (for reference)",
            "attrs": {},
            "val_type": "STRING",
            "value": "",
            "data_type": "BASE",
            "editables": {
              "value": true
            },
            "options": {
              "type": "HTTP",
              "attrs": {
                "method": "GET",
                "url": "@@{ntnx_calm_catalog_metadata_url}@@",
                "authentication": {
                  "auth_type": "none"
                },
                "connection_timeout": 120,
                "tls_verify": true,
                "retry_count": 1,
                "retry_interval": 10,
                "content_type": "application/json",
                "expected_response_params": [
                  {
                    "status": "SUCCESS",
                    "code": 200
                  }
                ],
                "response_paths": {
                  "ntnx_calm_object_uri": "$.entities[?(@.kind == \"@@{ntnx_calm_object_kinds}@@\" && @.metadata.name == \"@@{ntnx_calm_object_kind}@@\")].uri"
                },
                "type": "HTTP"
              }
            },
            "is_hidden": false,
            "is_mandatory": true
          },
          {
            "name": "ntnx_calm_object_overwrite",
            "description": "If there is already content with the same name, it can be overwritten or create an additional version (appended epoch timestamp)",
            "type": "LOCAL",
            "label": "Overwrite existing content",
            "attrs": {},
            "val_type": "STRING",
            "value": "False",
            "data_type": "BASE",
            "editables": {
              "value": true
            },
            "options": {
              "type": "PREDEFINED",
              "choices": [
                "True",
                "False"
              ]
            },
            "is_hidden": false,
            "is_mandatory": true
          }
        ]
      }
    }
  },
  "api_version": "3.0",
  "metadata": {
    "spec_version": 1,
    "kind": "runbook",
    "name": "DslCommunityRunbook"
  }
}
