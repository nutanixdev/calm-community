{
    "status": {},
    "contains_secrets": false,
    "product_version": "3.0.0.2",
    "spec": {
        "description": "GKE Cloud Console needs access to the cluster. To retrieve the token for the service account created as part of the provisioning process, run the following commands in a terminal. You can SSH from your computer to the admin VM (@@{AdminVM.address}@@) and execute the commands from there:\n\n1. SECRET_NAME=$(kubectl get serviceaccount @@{KUBERNETES_SERVICE_ACCOUNT}@@ -o jsonpath='{$.secrets[0].name}')\n2. kubectl get secret ${SECRET_NAME} -o jsonpath='{$.data.token}' | base64 --decode",
        "resources": {
            "client_attrs": {
                "None": {
                    "Profile": {
                        "Default": {
                            "Action": {},
                            "dsl_name": "Default"
                        }
                    },
                    "Package": {
                        "AHV_CENTOS": {
                            "Action": {},
                            "dsl_name": "AHV_CENTOS"
                        },
                        "AdminVM_Package": {
                            "Action": {},
                            "dsl_name": "AdminVM_Package"
                        },
                        "ControlPlaneVMs_Package": {
                            "Action": {},
                            "dsl_name": "ControlPlaneVMs_Package"
                        },
                        "WorkerNodesVMs_Package": {
                            "Action": {},
                            "dsl_name": "WorkerNodesVMs_Package"
                        }
                    },
                    "Substrate": {
                        "ControlPlaneVMs_Substrate": {
                            "Action": {},
                            "dsl_name": "ControlPlaneVMs_Substrate"
                        },
                        "AdminVM_Substrate": {
                            "Action": {},
                            "dsl_name": "AdminVM_Substrate"
                        },
                        "WorkerNodesVMs_Substrate": {
                            "Action": {},
                            "dsl_name": "WorkerNodesVMs_Substrate"
                        }
                    },
                    "Service": {
                        "ControlPlaneVMs": {
                            "Action": {},
                            "dsl_name": "ControlPlaneVMs"
                        },
                        "AdminVM": {
                            "Action": {},
                            "dsl_name": "AdminVM"
                        },
                        "WorkerNodesVMs": {
                            "Action": {},
                            "dsl_name": "WorkerNodesVMs"
                        }
                    },
                    "Deployment": {
                        "AdminVM_Deployment": {
                            "Action": {},
                            "dsl_name": "AdminVM_Deployment"
                        },
                        "WorkerNodesVMs_Deployment": {
                            "Action": {},
                            "dsl_name": "WorkerNodesVMs_Deployment"
                        },
                        "ControlPlaneVMs_Deployment": {
                            "Action": {},
                            "dsl_name": "ControlPlaneVMs_Deployment"
                        }
                    }
                }
            },
            "service_definition_list": [{
                    "singleton": false,
                    "action_list": [{
                            "description": "System action for creating an application",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                                "kind": "app_task",
                                                "name": "Source_Variables"
                                            },
                                            {
                                                "kind": "app_task",
                                                "name": "Anthos_Install_CLI"
                                            },
                                            {
                                                "kind": "app_task",
                                                "name": "Anthos_Create_Cluster"
                                            },
                                            {
                                                "kind": "app_task",
                                                "name": "GKE_Configure_CloudConsole"
                                            },
                                            {
                                                "kind": "app_task",
                                                "name": "NTNXK8S_Install_CSI"
                                            }
                                        ],
                                        "name": "AdminVM___create___dag",
                                        "attrs": {
                                            "edges": [{
                                                    "from_task_reference": {
                                                        "kind": "app_task",
                                                        "name": "Source_Variables"
                                                    },
                                                    "edge_type": "user_defined",
                                                    "type": "",
                                                    "to_task_reference": {
                                                        "kind": "app_task",
                                                        "name": "Anthos_Install_CLI"
                                                    }
                                                },
                                                {
                                                    "from_task_reference": {
                                                        "kind": "app_task",
                                                        "name": "Anthos_Install_CLI"
                                                    },
                                                    "edge_type": "user_defined",
                                                    "type": "",
                                                    "to_task_reference": {
                                                        "kind": "app_task",
                                                        "name": "Anthos_Create_Cluster"
                                                    }
                                                },
                                                {
                                                    "from_task_reference": {
                                                        "kind": "app_task",
                                                        "name": "Anthos_Create_Cluster"
                                                    },
                                                    "edge_type": "user_defined",
                                                    "type": "",
                                                    "to_task_reference": {
                                                        "kind": "app_task",
                                                        "name": "GKE_Configure_CloudConsole"
                                                    }
                                                },
                                                {
                                                    "from_task_reference": {
                                                        "kind": "app_task",
                                                        "name": "GKE_Configure_CloudConsole"
                                                    },
                                                    "edge_type": "user_defined",
                                                    "type": "",
                                                    "to_task_reference": {
                                                        "kind": "app_task",
                                                        "name": "NTNXK8S_Install_CSI"
                                                    }
                                                }
                                            ],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Source_Variables",
                                        "attrs": {
                                            "type": "",
                                            "inarg_list": [],
                                            "runbook_reference": {
                                                "kind": "app_runbook",
                                                "name": "AdminVM_Source_Variables_runbook"
                                            }
                                        },
                                        "timeout_secs": "0",
                                        "type": "CALL_RUNBOOK",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Anthos_Install_CLI",
                                        "attrs": {
                                            "type": "",
                                            "inarg_list": [],
                                            "runbook_reference": {
                                                "kind": "app_runbook",
                                                "name": "AdminVM_Anthos_Install_CLI_runbook"
                                            }
                                        },
                                        "timeout_secs": "0",
                                        "type": "CALL_RUNBOOK",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Anthos_Create_Cluster",
                                        "attrs": {
                                            "type": "",
                                            "inarg_list": [],
                                            "runbook_reference": {
                                                "kind": "app_runbook",
                                                "name": "AdminVM_Anthos_Create_Cluster_runbook"
                                            }
                                        },
                                        "timeout_secs": "0",
                                        "type": "CALL_RUNBOOK",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "GKE_Configure_CloudConsole",
                                        "attrs": {
                                            "type": "",
                                            "inarg_list": [],
                                            "runbook_reference": {
                                                "kind": "app_runbook",
                                                "name": "AdminVM_GKE_Configure_CloudConsole_runbook"
                                            }
                                        },
                                        "timeout_secs": "0",
                                        "type": "CALL_RUNBOOK",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "NTNXK8S_Install_CSI",
                                        "attrs": {
                                            "type": "",
                                            "inarg_list": [],
                                            "runbook_reference": {
                                                "kind": "app_runbook",
                                                "name": "AdminVM_NTNXK8S_Install_CSI_runbook"
                                            }
                                        },
                                        "timeout_secs": "0",
                                        "type": "CALL_RUNBOOK",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "AdminVM___create___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM___create___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_create"
                        },
                        {
                            "description": "System action for starting an application",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "AdminVM"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "AdminVM___start___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "AdminVM___start___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM___start___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_start"
                        },
                        {
                            "description": "System action for stopping an application",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "AdminVM"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "AdminVM___stop___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "AdminVM___stop___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM___stop___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_stop"
                        },
                        {
                            "description": "System action for deleting an application. Deletes created VMs as well",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Anthos_Reset_Cluster"
                                        }],
                                        "name": "AdminVM___delete___dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Anthos_Reset_Cluster",
                                        "attrs": {
                                            "type": "",
                                            "inarg_list": [],
                                            "runbook_reference": {
                                                "kind": "app_runbook",
                                                "name": "AdminVM_Anthos_Reset_Cluster_runbook"
                                            }
                                        },
                                        "timeout_secs": "0",
                                        "type": "CALL_RUNBOOK",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "AdminVM___delete___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM___delete___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_delete"
                        },
                        {
                            "description": "System action for restarting an application",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "AdminVM"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "AdminVM___restart___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "AdminVM___restart___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM___restart___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_restart"
                        },
                        {
                            "description": "System action for deleting an application. Does not delete created VMs",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "AdminVM"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "AdminVM___soft_delete___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "AdminVM___soft_delete___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM___soft_delete___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_soft_delete"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Install_SDK"
                                        }],
                                        "name": "AdminVM_Gcloud_Install_SDK_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Install_SDK",
                                        "attrs": {
                                            "script": "sudo tee -a \/etc\/yum.repos.d\/google-cloud-sdk.repo << EOM\n[google-cloud-sdk]\nname=Google Cloud SDK\nbaseurl=https:\/\/packages.cloud.google.com\/yum\/repos\/cloud-sdk-el7-x86_64\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https:\/\/packages.cloud.google.com\/yum\/doc\/yum-key.gpg\n       https:\/\/packages.cloud.google.com\/yum\/doc\/rpm-package-key.gpg\nEOM\n\nsudo dnf install -y google-cloud-sdk kubectl",
                                            "type": "",
                                            "command_line_args": "",
                                            "exit_status": [],
                                            "script_type": "sh"
                                        },
                                        "timeout_secs": "0",
                                        "type": "EXEC",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "AdminVM_Gcloud_Install_SDK_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM_Gcloud_Install_SDK_dag"
                                },
                                "variable_list": []
                            },
                            "name": "Gcloud_Install_SDK"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Source_Variables"
                                        }],
                                        "name": "AdminVM_Source_Variables_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Source_Variables",
                                        "attrs": {
                                            "script": "function join { \n    local IFS=\"$1\"; shift; echo \"$*\"; \n}\n\nif [ ! -f ~\/google_application_credentials ]; then\n    echo '@@{CRED_GCLOUD.secret}@@' > ~\/google_application_credentials\nfi\n\nif [ ! -f ~\/.ssh\/id_rsa ]; then\n    echo '@@{CRED_OS.secret}@@' > ~\/.ssh\/id_rsa\nfi\n\nif [ \"@@{ScaleIn}@@\" -eq \"0\" ]; then\n    export ANTHOS_WORKERNODES_ADDRESSES=\"@@{WorkerNodesVMs.address}@@\"\nelse\n    IFS=',' read -r -a array <<< \"@@{WorkerNodesVMs.address}@@\"\n    COUNT=@@{ScaleIn}@@\n    export ANTHOS_WORKERNODES_ADDRESSES=$(join , ${array[@]::${#array[@]}-$COUNT})\nfi\n\nGOOGLE_PROJECT_ID=$(grep project_id ~\/google_application_credentials  | awk -F'\"' '{print $4}')\n\ncat << EOF > .\/variables.sh\nexport ANTHOS_VERSION=\"@@{ANTHOS_VERSION}@@\"\nexport GOOGLE_APPLICATION_CREDENTIALS=\"\/home\/@@{CRED_OS.username}@@\/google_application_credentials\"\nexport ANTHOS_TEMPLATE_PATH=\"\/home\/@@{CRED_OS.username}@@\/baremetal\/bmctl-workspace\/@@{ANTHOS_CLUSTER_NAME}@@\/@@{ANTHOS_CLUSTER_NAME}@@.yaml\"\nexport ANTHOS_SSH_KEY=\"\/home\/@@{CRED_OS.username}@@\/.ssh\/id_rsa\"\nexport ANTHOS_CLUSTER_TYPE=\"hybrid\"\nexport ANTHOS_CONTROLPLANE_ADDRESSES=\"@@{ControlPlaneVMs.address}@@\"\nexport ANTHOS_LVPNODEMOUNTS=\"\/home\/@@{CRED_OS.username}@@\/localpv-disk\"\nexport ANTHOS_LVPSHARE=\"\/home\/@@{CRED_OS.username}@@\/localpv-share\"\nexport ANTHOS_LOGINUSER=\"@@{CRED_OS.username}@@\"\nexport ANTHOS_WORKERNODES_ADDRESSES=\"${ANTHOS_WORKERNODES_ADDRESSES}\"\nexport ANTHOS_CLUSTER_NAME=\"@@{ANTHOS_CLUSTER_NAME}@@\"\nexport ANTHOS_CONTROLPLANE_VIP=@@{ANTHOS_CONTROLPLANE_VIP}@@\nexport ANTHOS_PODS_NETWORK=@@{ANTHOS_PODS_NETWORK}@@\nexport ANTHOS_SERVICES_NETWORK=@@{ANTHOS_SERVICES_NETWORK}@@\nexport ANTHOS_INGRESS_VIP=@@{ANTHOS_INGRESS_VIP}@@\nexport ANTHOS_LB_ADDRESSPOOL=@@{ANTHOS_LB_ADDRESSPOOL}@@\nexport PYTHON_ANTHOS_GENCONFIG=\"@@{PYTHON_ANTHOS_GENCONFIG}@@\"\nexport KSA_NAME=@@{KUBERNETES_SERVICE_ACCOUNT}@@\nexport NTNX_CSI_URL=@@{NTNX_CSI_URL}@@\nexport NTNX_PE_IP=@@{NTNX_PE_IP}@@\nexport NTNX_PE_PORT=@@{NTNX_PE_PORT}@@\nexport NTNX_PE_USERNAME=@@{CRED_PE.username}@@\nexport NTNX_PE_PASSWORD=@@{CRED_PE.secret}@@\nexport NTNX_PE_DATASERVICE_IP=@@{NTNX_PE_DATASERVICE_IP}@@\nexport NTNX_PE_STORAGE_CONTAINER=@@{NTNX_PE_STORAGE_CONTAINER}@@\nexport KUBECONFIG=\"\/home\/@@{CRED_OS.username}@@\/baremetal\/bmctl-workspace\/@@{ANTHOS_CLUSTER_NAME}@@\/@@{ANTHOS_CLUSTER_NAME}@@-kubeconfig\"\nexport GOOGLE_PROJECT_ID=$GOOGLE_PROJECT_ID\nEOF\n\nsource .\/variables.sh\ngcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS\n",
                                            "type": "",
                                            "command_line_args": "",
                                            "exit_status": [],
                                            "script_type": "sh"
                                        },
                                        "timeout_secs": "0",
                                        "type": "EXEC",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "AdminVM_Source_Variables_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM_Source_Variables_dag"
                                },
                                "variable_list": [{
                                    "regex": {
                                        "should_validate": false,
                                        "value": "^[\\d]*$"
                                    },
                                    "val_type": "INT",
                                    "is_mandatory": false,
                                    "description": "",
                                    "data_type": "BASE",
                                    "type": "LOCAL",
                                    "name": "ScaleIn",
                                    "value": "0",
                                    "label": "",
                                    "attrs": {
                                        "type": ""
                                    },
                                    "is_hidden": false
                                }]
                            },
                            "name": "Source_Variables"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Install_CLI"
                                        }],
                                        "name": "AdminVM_Anthos_Install_CLI_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Install_CLI",
                                        "attrs": {
                                            "script": "source ~\/variables.sh\n\necho '======Installing BMCTL======'\n# Install Anthos CLI (bmctl)\ncd ~\necho \"creating baremetal folder\"\nmkdir -p baremetal\ncd baremetal\n\ngsutil cp gs:\/\/anthos-baremetal-release\/bmctl\/$ANTHOS_VERSION\/linux-amd64\/bmctl bmctl\nchmod a+x bmctl\n\n# Create Anthos configuration template\nchmod 600 ~\/.ssh\/id_rsa\nchmod 600 ~\/google_application_credentials\n\ncd ~\/baremetal\n.\/bmctl create config -c $ANTHOS_CLUSTER_NAME \\\n  --enable-apis --create-service-accounts --project-id=$GOOGLE_PROJECT_ID\n",
                                            "type": "",
                                            "command_line_args": "",
                                            "exit_status": [],
                                            "script_type": "sh"
                                        },
                                        "timeout_secs": "0",
                                        "type": "EXEC",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "AdminVM_Anthos_Install_CLI_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM_Anthos_Install_CLI_dag"
                                },
                                "variable_list": []
                            },
                            "name": "Anthos_Install_CLI"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Create_Cluster"
                                        }],
                                        "name": "AdminVM_Anthos_Create_Cluster_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Create_Cluster",
                                        "attrs": {
                                            "exit_status": [],
                                            "script": "# ============== DO NO CHANGE AFTER THIS ===============\nsource ~\/variables.sh\necho '======Create Anthos cluster======'\necho \"invoking $ANTHOS_CLUSTER_NAME\"\n# Install PyYAML\nsudo python2 -m pip install pyyaml\n\n# Create Anthos configuration file\ncd ~\/baremetal\ncurl -s $PYTHON_ANTHOS_GENCONFIG | python2\n\n# Create Anthos Kubernetes cluster\necho \"Creating Anthos cluster. This can take about 45 minutes depending on Internet connectivity\"\nif .\/bmctl create cluster -c $ANTHOS_CLUSTER_NAME > \/dev\/null ; then\n    export KUBECONFIG=$HOME\/baremetal\/bmctl-workspace\/${ANTHOS_CLUSTER_NAME}\/${ANTHOS_CLUSTER_NAME}-kubeconfig\n    echo \"KUBECONFIG=$KUBECONFIG\"\n    mkdir -p $HOME\/.kube\n    cp $KUBECONFIG $HOME\/.kube\/config\nelse\n    echo \"Check the logs located in $HOME\/baremetal\/bmctl-workspace\/${ANTHOS_CLUSTER_NAME}\/log\"\n    exit 1\nfi\n\n",
                                            "eval_variables": [
                                                "KUBECONFIG"
                                            ],
                                            "eval_scope": "local",
                                            "type": "",
                                            "script_type": "sh"
                                        },
                                        "timeout_secs": "0",
                                        "type": "SET_VARIABLE",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "AdminVM_Anthos_Create_Cluster_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM_Anthos_Create_Cluster_dag"
                                },
                                "variable_list": []
                            },
                            "name": "Anthos_Create_Cluster"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Scale_Cluster"
                                        }],
                                        "name": "AdminVM_Anthos_Scale_Cluster_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Scale_Cluster",
                                        "attrs": {
                                            "script": "#!\/bin\/bash\nsource ~\/variables.sh\n#tojson <array>\nfunction tojson {\n    array=(\"$@\")\n    cnt=${#array[@]}\n    for ((i=0;i<cnt;i++)); do\n      array[i]=\"{\\\"address\\\":\\\"${array[i]}\\\"}\"\n    done\n    joined=$(join , \"${array[@]}\")\n    echo \"[$joined]\" \n}\n\n# join <delimiter> <array>\nfunction join { \n        local IFS=\"$1\"; shift; echo \"$*\"; \n}\n\n# get_node_pool <namespace> <anthos cluster name>\nfunction get_node_pool {\n        node_pools=$(kubectl -n \"$1\" get nodepools.baremetal.cluster.gke.io | grep -vi \"^name\\|^$2\" | cut -d' ' -f1)\n        amount=$(echo \"$node_pools\" | wc -l)\n        if [ \"$amount\" !=  \"1\" ]\n        then\n                echo \"unable to retrieve nodepool name: none or multiple found\"\n                exit 1\n        fi\n        echo \"$node_pools\"\n}\n\n\n# wait check_add <namespace> <node-pool name> | wait check_removal <expected worker node count>\nfunction wait {\n    NEXT_WAIT_TIME=0\n    ITERATION=60\n    until [ $NEXT_WAIT_TIME -eq $ITERATION ] || $1 \"$2\" \"$3\"; do\n        sleep 10\n        ((NEXT_WAIT_TIME++))\n    done\n    if [ $NEXT_WAIT_TIME -lt $ITERATION ]\n    then\n        return 0\n    fi\n    return 1\n\n}\n\n# check <namespace> <node-pool name>\nfunction check_add {\n    expected=\"ReconciliationCompleted\"\n    status=$(kubectl -n \"$1\" describe nodepools.baremetal.cluster.gke.io \"$2\" | grep -oP \"(?<=Reason:).*\"| sed 's\/ *\/\/g')\n    if [ \"$status\" == \"$expected\" ]\n    then\n        echo \"stop waiting: $status\"\n        return 0\n    fi\n    echo \"still waiting: $status\"\n    return 1\n}\n\n# check_removal <expected worker node count>\nfunction check_removal {\n    expected=\"$1\"\n    status=$(kubectl get node --selector='!node-role.kubernetes.io\/master' | grep -vi \"^name\" | wc -l)\n    if [ \"$status\" == \"$expected\" ] || ! kubectl cluster-info --request-timeout=5s\n    then\n        echo \"stop waiting for removal: $status\"\n        return 0\n    fi\n    echo \"still waiting for removal: $status\"\n    return 1\n}\n\nnamespace=\"cluster-$ANTHOS_CLUSTER_NAME\"\nnodepool=$(get_node_pool \"$namespace\" \"$ANTHOS_CLUSTER_NAME\")\n# Get current node IPs\necho \"Fetch current worker node IPs\"\ncurrent_node_ips=($(kubectl -n $namespace describe nodepools.baremetal.cluster.gke.io $nodepool | grep  -oP \"(?<=Address:).*\"))\n# Get the current amount of nodes\ncurrent_node_length=\"${#current_node_ips[@]}\"\necho \"Current node IPS: $current_node_ips\"\necho \"ANTHOS_WORKERNODES_ADDRESSES: $ANTHOS_WORKERNODES_ADDRESSES\"\n# Read new node_ips from env\nIFS=',' read -r -a new_nodes <<< \"$ANTHOS_WORKERNODES_ADDRESSES\"\nnew_node_length=\"${#new_nodes[@]}\"\n\n# Check if the amount of nodes are equal\nif [ \"$current_node_length\" -eq  \"$new_node_length\" ]\nthen\n        echo \"not performing scale-up or down\"\n        exit 0\nfi\n# Make sure we don't scale down to zero workers\nif [ \"$new_node_length\" -eq  \"0\" ]\nthen\n        echo \"cannot scale to 0 nodes\"\n        exit 1\nfi\n\njsonstring=$(tojson \"${new_nodes[@]}\")\necho \"Patching nodepool to start scaling\"\nkubectl patch -n \"$namespace\" nodepools.baremetal.cluster.gke.io \"$nodepool\" -p \"{\\\"spec\\\":{\\\"nodes\\\": $jsonstring }}\" --type=merge\nsleep 20\n\n# Check if this is a scale in task\nif [ \"$new_node_length\" -lt  \"$current_node_length\" ]\nthen\n        wait \"check_removal\" \"$new_node_length\"\n        exit 0\nfi\n\n# Check if this is a scale out task\nif [ \"$new_node_length\" -gt  \"$current_node_length\" ]\nthen\n        wait \"check_add\" \"$namespace\" \"$nodepool\"\n        exit 0\nfi\n",
                                            "type": "",
                                            "command_line_args": "",
                                            "exit_status": [],
                                            "script_type": "sh"
                                        },
                                        "timeout_secs": "0",
                                        "type": "EXEC",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "AdminVM_Anthos_Scale_Cluster_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM_Anthos_Scale_Cluster_dag"
                                },
                                "variable_list": []
                            },
                            "name": "Anthos_Scale_Cluster"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Upgrade_Cluster"
                                        }],
                                        "name": "AdminVM_Anthos_Upgrade_Cluster_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Upgrade_Cluster",
                                        "attrs": {
                                            "script": "# ============== DO NO CHANGE AFTER THIS ===============\nsource ~\/variables.sh\n\ncurrent_anthos_version=$(kubectl get cluster --all-namespaces -o yaml | grep \"^ *anthosBareMetalVersion:\" | tr -s ' ' | cut -d ' ' -f3 | uniq )\nif [ \"$current_anthos_version\" == \"$ANTHOS_VERSION\" ]\nthen\n    echo \"Anthos cluster already on required version: $current_anthos_version\"\n    exit 0\nfi\n# Upgrade Anthos CLI (bmctl)\ncd ~\/baremetal\n\ngsutil cp gs:\/\/anthos-baremetal-release\/bmctl\/$ANTHOS_VERSION\/linux-amd64\/bmctl bmctl\nchmod a+x bmctl\n\n# Updating Anthos version in config file\nsed -i '\/anthosBareMetalVersion\/s\/:.*$\/: '\"${ANTHOS_VERSION}\"'\/' $HOME\/baremetal\/bmctl-workspace\/${ANTHOS_CLUSTER_NAME}\/${ANTHOS_CLUSTER_NAME}.yaml\n\n# Upgrading Anthos cluster\necho \"The upgrade process can take a while depending on the number of nodes and applications running on it\"\nif .\/bmctl upgrade cluster -c ${ANTHOS_CLUSTER_NAME} --kubeconfig ${KUBECONFIG} > \/dev\/null ; then\n    echo \"The cluster has been upgraded to: Anthos ver. ${ANTHOS_VERSION}\"\n    exit 0\nelse\n    echo \"Check the logs located in $HOME\/baremetal\/bmctl-workspace\/${ANTHOS_CLUSTER_NAME}\/log\"\n    exit 1\nfi\n",
                                            "type": "",
                                            "command_line_args": "",
                                            "exit_status": [],
                                            "script_type": "sh"
                                        },
                                        "timeout_secs": "0",
                                        "type": "EXEC",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "AdminVM_Anthos_Upgrade_Cluster_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM_Anthos_Upgrade_Cluster_dag"
                                },
                                "variable_list": []
                            },
                            "name": "Anthos_Upgrade_Cluster"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Reset_Cluster"
                                        }],
                                        "name": "AdminVM_Anthos_Reset_Cluster_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Reset_Cluster",
                                        "attrs": {
                                            "script": "# ============== DO NO CHANGE AFTER THIS ===============\nsource .\/variables.sh\n\n# Reset Anthos cluster before deleting\ncd ~\/baremetal\necho \"The reset process can take few minutes depending on the number of nodes and applications running on it\"\nif .\/bmctl reset -c ${ANTHOS_CLUSTER_NAME} > \/dev\/null ; then\n    echo \"The cluster has been unregistered.\"\n    exit 0\nelse\n    echo \"The process has failed. Deletion continues for virtual servers. Remember to manually clean up orphaned objects in GCP.\"\n    exit 0\nfi\n",
                                            "type": "",
                                            "command_line_args": "",
                                            "exit_status": [],
                                            "script_type": "sh"
                                        },
                                        "timeout_secs": "0",
                                        "type": "EXEC",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "AdminVM_Anthos_Reset_Cluster_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM_Anthos_Reset_Cluster_dag"
                                },
                                "variable_list": []
                            },
                            "name": "Anthos_Reset_Cluster"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "GKE_Configure_CloudConsole"
                                        }],
                                        "name": "AdminVM_GKE_Configure_CloudConsole_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "GKE_Configure_CloudConsole",
                                        "attrs": {
                                            "script": "source ~\/variables.sh\necho '======Configure Cloud console======'\n# ============== DO NO CHANGE AFTER THIS ===============\n\ncat <<EOF | kubectl apply -f -\nkind: ClusterRole\napiVersion: rbac.authorization.k8s.io\/v1\nmetadata:\n  name: cloud-console-reader\nrules:\n- apiGroups: [\"\"]\n  resources: [\"nodes\", \"persistentvolumes\"]\n  verbs: [\"get\", \"list\", \"watch\"]\n- apiGroups: [\"storage.k8s.io\"]\n  resources: [\"storageclasses\"]\n  verbs: [\"get\", \"list\", \"watch\"]\nEOF\n\nkubectl create serviceaccount ${KSA_NAME}\nkubectl create clusterrolebinding ${KSA_NAME}-view \\\n--clusterrole view --serviceaccount default:${KSA_NAME}\nkubectl create clusterrolebinding ${KSA_NAME}-reader \\\n--clusterrole cloud-console-reader --serviceaccount default:${KSA_NAME}\n\nkubectl create clusterrolebinding ${KSA_NAME}-admin \\\n--clusterrole cluster-admin --serviceaccount default:${KSA_NAME}\n",
                                            "type": "",
                                            "command_line_args": "",
                                            "exit_status": [],
                                            "script_type": "sh"
                                        },
                                        "timeout_secs": "0",
                                        "type": "EXEC",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "AdminVM_GKE_Configure_CloudConsole_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM_GKE_Configure_CloudConsole_dag"
                                },
                                "variable_list": []
                            },
                            "name": "GKE_Configure_CloudConsole"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Install_Docker"
                                        }],
                                        "name": "AdminVM_Centos_Install_Docker_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Install_Docker",
                                        "attrs": {
                                            "script": "# Eject cloud-init\nsudo eject\n\n# Setting SELinux to permissive\nsudo setenforce 0\nsudo sed -i 's\/SELINUX=enforcing\/SELINUX=permissive\/g' \/etc\/selinux\/config\n\nsudo sestatus | grep \"Current mode\"\n\n# Disabling firewalld\nsudo systemctl stop firewalld\nsudo systemctl disable firewalld\n\n# Remove any previous Docker version\nsudo dnf remove docker \\\n  docker-client \\\n  docker-client-latest \\\n  docker-common \\\n  docker-latest \\\n  docker-latest-logrotate \\\n  docker-logrotate \\\n  docker-engine\n\n# Install iptables but disable it (https:\/\/github.com\/moby\/moby\/issues\/41799 & https:\/\/cloud.google.com\/compute\/docs\/troubleshooting\/known-issues)\nsudo dnf install -y iptables-services\nsudo chkconfig iptables off\n\n# Install iSCSI and NFS CentOS packages for Nutanix Volumes and Files CSI support\nsudo dnf install -y iscsi-initiator-utils nfs-utils\nsudo systemctl enable iscsid\nsudo systemctl start iscsid\n\n# Install Docker 19.03+\nsudo dnf install -y yum-utils\nsudo yum-config-manager \\\n    --add-repo \\\n    https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nsudo dnf install -y docker-ce docker-ce-cli containerd.io\nsudo systemctl enable docker\nsudo systemctl start docker\n\n# Verify you are now running version 19.03+\nsudo docker version\n\n# Add your user to the docker group\nsudo usermod -aG docker $USER\n\n# Change default cgroup driver to systemd\ncat <<EOF | sudo tee \/etc\/docker\/daemon.json\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\",\n  \"storage-opts\": [\n    \"overlay2.override_kernel_check=true\"\n  ]\n}\nEOF\n\nsudo systemctl restart docker\nsudo docker info | grep -i cgroup\n",
                                            "type": "",
                                            "command_line_args": "",
                                            "exit_status": [],
                                            "script_type": "sh"
                                        },
                                        "timeout_secs": "0",
                                        "type": "EXEC",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "AdminVM_Centos_Install_Docker_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM_Centos_Install_Docker_dag"
                                },
                                "variable_list": []
                            },
                            "name": "Centos_Install_Docker"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Extend_OS_Disk"
                                        }],
                                        "name": "AdminVM_NTNXPC_Extend_Disk_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Extend_OS_Disk",
                                        "attrs": {
                                            "script": "vmUuid = '@@{id}@@'\ndiskSize = @@{OS_DISK_SIZE}@@ # GB\npcAddress = '@@{NTNX_PC_IP}@@'\npcUsername = '@@{CRED_PC.username}@@'\npcPassword = '@@{CRED_PC.secret}@@'\n\n# ============== DO NO CHANGE AFTER THIS ===============\n\nusrPass = '{}:{}'.format(pcUsername,pcPassword)\nb64Pass = base64.b64encode(usrPass)\n\n# Get VM\napi_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/vms\/{}'.format(pcAddress,vmUuid)\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Basic {}'.format(b64Pass)}\n\nr = urlreq(api_url, verb='GET', headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n# Power off VM and extend disk\ndel resp['status']\n\ndisk_size_mib = diskSize * 1024\ndisk_size_bytes = disk_size_mib * 1024**2\n\nresp['spec']['resources']['disk_list'][0]['disk_size_mib'] = disk_size_mib\nresp['spec']['resources']['disk_list'][0]['disk_size_bytes'] = disk_size_bytes\nresp['spec']['resources']['power_state'] = 'OFF'\n\npayload = resp\n\nr = urlreq(api_url, verb='PUT', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    taskUuid = resp['status']['execution_context']['task_uuid']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n\n# Monitor task\nstate = \"\"\nwhile state != \"SUCCEEDED\":\n    api_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/tasks\/{}'.format(pcAddress,taskUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n# Wait for VM to power off\napi_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/vms\/{}'.format(pcAddress,vmUuid)\nr = urlreq(api_url, verb='GET', headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    power_state = resp['status']['resources']['power_state']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\nstate = \"\"\nwhile state != \"OFF\":\n    api_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/vms\/{}'.format(pcAddress,vmUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']['resources']['power_state']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n# Power on VM\ndel resp['status']\n\nresp['spec']['resources']['power_state'] = 'ON'\n\napi_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/vms\/{}'.format(pcAddress,vmUuid)\npayload = resp\n\nr = urlreq(api_url, verb='PUT', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    taskUuid = resp['status']['execution_context']['task_uuid']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n# Monitor task\nstate = \"\"\nwhile state != \"SUCCEEDED\":\n    api_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/tasks\/{}'.format(pcAddress,taskUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\nprint(\"OS disk extended to {} GB\".format(diskSize))\n\n# Wait until VM boots\nsleep(60)\n",
                                            "type": "",
                                            "command_line_args": "",
                                            "exit_status": [],
                                            "script_type": "static"
                                        },
                                        "timeout_secs": "0",
                                        "type": "EXEC",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "AdminVM_NTNXPC_Extend_Disk_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM_NTNXPC_Extend_Disk_dag"
                                },
                                "variable_list": []
                            },
                            "name": "NTNXPC_Extend_Disk"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "NTNXK8S_Install_CSI"
                                        }],
                                        "name": "AdminVM_NTNXK8S_Install_CSI_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "AdminVM"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "NTNXK8S_Install_CSI",
                                        "attrs": {
                                            "script": "# ============== DO NO CHANGE AFTER THIS ===============\nsource ~\/variables.sh\necho '======Installing Nutanix CSI driver======'\ncat <<EOF | kubectl apply -f -\napiVersion: storage.k8s.io\/v1beta1\nkind: CSIDriver\nmetadata:\n  name: csi.nutanix.com\nspec:\n  attachRequired: false\n  podInfoOnMount: true\nEOF\n\ncd ~\/baremetal\ncurl -s -o csi.tar.gz \\\n  ${NTNX_CSI_URL}\n\nmkdir -p csi && tar xvf csi.tar.gz -C csi --strip-components 1\n\nkubectl create -f csi\/ntnx-csi-rbac.yaml\nkubectl create -f csi\/ntnx-csi-node.yaml\nkubectl create -f csi\/ntnx-csi-provisioner.yaml\n\nexport CSI_KEY=$(echo -n \"${NTNX_PE_IP}:${NTNX_PE_PORT}:${NTNX_PE_USERNAME}:${NTNX_PE_PASSWORD}\" | base64)\n\ncat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: kube-system\ndata:\n  key: ${CSI_KEY}\nEOF\n\ncat <<EOF | kubectl apply -f -\nallowVolumeExpansion: true\napiVersion: storage.k8s.io\/v1\nkind: StorageClass\nmetadata:\n    annotations:\n        storageclass.kubernetes.io\/is-default-class: \"true\"\n    name: nutanix-default\nparameters:\n   csi.storage.k8s.io\/provisioner-secret-name: ntnx-secret\n   csi.storage.k8s.io\/provisioner-secret-namespace: kube-system\n   csi.storage.k8s.io\/node-publish-secret-name: ntnx-secret  \n   csi.storage.k8s.io\/node-publish-secret-namespace: kube-system\n   csi.storage.k8s.io\/controller-expand-secret-name: ntnx-secret\n   csi.storage.k8s.io\/controller-expand-secret-namespace: kube-system\n   csi.storage.k8s.io\/fstype: ext4\n   dataServiceEndPoint: ${NTNX_PE_DATASERVICE_IP}:3260\n   flashMode: DISABLED\n   storageContainer: ${NTNX_PE_STORAGE_CONTAINER}\n   chapAuth: DISABLED\n   storageType: NutanixVolumes\nprovisioner: csi.nutanix.com\nreclaimPolicy: Delete\nEOF\n",
                                            "type": "",
                                            "command_line_args": "",
                                            "exit_status": [],
                                            "script_type": "sh"
                                        },
                                        "timeout_secs": "0",
                                        "type": "EXEC",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "AdminVM_NTNXK8S_Install_CSI_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "AdminVM_NTNXK8S_Install_CSI_dag"
                                },
                                "variable_list": []
                            },
                            "name": "NTNXK8S_Install_CSI"
                        }
                    ],
                    "depends_on_list": [{
                            "kind": "app_blueprint_deployment",
                            "name": "ControlPlaneVMs_Deployment"
                        },
                        {
                            "kind": "app_blueprint_deployment",
                            "name": "WorkerNodesVMs_Deployment"
                        }
                    ],
                    "name": "AdminVM",
                    "port_list": [],
                    "tier": "",
                    "variable_list": [{
                            "val_type": "STRING",
                            "is_mandatory": false,
                            "description": "",
                            "data_type": "BASE",
                            "type": "LOCAL",
                            "name": "GCP_PROJECT_ID",
                            "value": "",
                            "label": "",
                            "attrs": {
                                "type": ""
                            },
                            "is_hidden": false
                        },
                        {
                            "val_type": "STRING",
                            "is_mandatory": false,
                            "description": "",
                            "data_type": "BASE",
                            "type": "LOCAL",
                            "name": "GCP_KEY",
                            "value": "",
                            "label": "",
                            "attrs": {
                                "type": ""
                            },
                            "is_hidden": true
                        },
                        {
                            "val_type": "STRING",
                            "is_mandatory": false,
                            "description": "",
                            "data_type": "BASE",
                            "type": "LOCAL",
                            "name": "KUBECONFIG",
                            "value": "",
                            "label": "",
                            "attrs": {
                                "type": ""
                            },
                            "is_hidden": false
                        }
                    ],
                    "description": "Admin VM"
                },
                {
                    "singleton": false,
                    "action_list": [{
                            "description": "System action for creating an application",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "ControlPlaneVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "ControlPlaneVMs___create___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "ControlPlaneVMs___create___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "ControlPlaneVMs___create___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_create"
                        },
                        {
                            "description": "System action for starting an application",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "ControlPlaneVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "ControlPlaneVMs___start___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "ControlPlaneVMs___start___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "ControlPlaneVMs___start___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_start"
                        },
                        {
                            "description": "System action for stopping an application",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "ControlPlaneVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "ControlPlaneVMs___stop___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "ControlPlaneVMs___stop___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "ControlPlaneVMs___stop___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_stop"
                        },
                        {
                            "description": "System action for deleting an application. Deletes created VMs as well",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "ControlPlaneVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "ControlPlaneVMs___delete___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "ControlPlaneVMs___delete___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "ControlPlaneVMs___delete___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_delete"
                        },
                        {
                            "description": "System action for restarting an application",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "ControlPlaneVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "ControlPlaneVMs___restart___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "ControlPlaneVMs___restart___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "ControlPlaneVMs___restart___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_restart"
                        },
                        {
                            "description": "System action for deleting an application. Does not delete created VMs",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "ControlPlaneVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "ControlPlaneVMs___soft_delete___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "ControlPlaneVMs___soft_delete___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "ControlPlaneVMs___soft_delete___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_soft_delete"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "ControlPlaneVMs"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Install_Docker"
                                        }],
                                        "name": "ControlPlaneVMs_Centos_Install_Docker_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "ControlPlaneVMs"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Install_Docker",
                                        "attrs": {
                                            "script": "# Eject cloud-init\nsudo eject\n\n# Setting SELinux to permissive\nsudo setenforce 0\nsudo sed -i 's\/SELINUX=enforcing\/SELINUX=permissive\/g' \/etc\/selinux\/config\n\nsudo sestatus | grep \"Current mode\"\n\n# Disabling firewalld\nsudo systemctl stop firewalld\nsudo systemctl disable firewalld\n\n# Remove any previous Docker version\nsudo dnf remove docker \\\n  docker-client \\\n  docker-client-latest \\\n  docker-common \\\n  docker-latest \\\n  docker-latest-logrotate \\\n  docker-logrotate \\\n  docker-engine\n\n# Install iptables but disable it (https:\/\/github.com\/moby\/moby\/issues\/41799 & https:\/\/cloud.google.com\/compute\/docs\/troubleshooting\/known-issues)\nsudo dnf install -y iptables-services\nsudo chkconfig iptables off\n\n# Install iSCSI and NFS CentOS packages for Nutanix Volumes and Files CSI support\nsudo dnf install -y iscsi-initiator-utils nfs-utils\nsudo systemctl enable iscsid\nsudo systemctl start iscsid\n\n# Install Docker 19.03+\nsudo dnf install -y yum-utils\nsudo yum-config-manager \\\n    --add-repo \\\n    https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nsudo dnf install -y docker-ce docker-ce-cli containerd.io\nsudo systemctl enable docker\nsudo systemctl start docker\n\n# Verify you are now running version 19.03+\nsudo docker version\n\n# Add your user to the docker group\nsudo usermod -aG docker $USER\n\n# Change default cgroup driver to systemd\ncat <<EOF | sudo tee \/etc\/docker\/daemon.json\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\",\n  \"storage-opts\": [\n    \"overlay2.override_kernel_check=true\"\n  ]\n}\nEOF\n\nsudo systemctl restart docker\nsudo docker info | grep -i cgroup\n",
                                            "type": "",
                                            "command_line_args": "",
                                            "exit_status": [],
                                            "script_type": "sh"
                                        },
                                        "timeout_secs": "0",
                                        "type": "EXEC",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "ControlPlaneVMs_Centos_Install_Docker_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "ControlPlaneVMs_Centos_Install_Docker_dag"
                                },
                                "variable_list": []
                            },
                            "name": "Centos_Install_Docker"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "ControlPlaneVMs"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Extend_OS_Disk"
                                        }],
                                        "name": "ControlPlaneVMs_NTNXPC_Extend_Disk_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "ControlPlaneVMs"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Extend_OS_Disk",
                                        "attrs": {
                                            "script": "vmUuid = '@@{id}@@'\ndiskSize = @@{OS_DISK_SIZE}@@ # GB\npcAddress = '@@{NTNX_PC_IP}@@'\npcUsername = '@@{CRED_PC.username}@@'\npcPassword = '@@{CRED_PC.secret}@@'\n\n# ============== DO NO CHANGE AFTER THIS ===============\n\nusrPass = '{}:{}'.format(pcUsername,pcPassword)\nb64Pass = base64.b64encode(usrPass)\n\n# Get VM\napi_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/vms\/{}'.format(pcAddress,vmUuid)\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Basic {}'.format(b64Pass)}\n\nr = urlreq(api_url, verb='GET', headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n# Power off VM and extend disk\ndel resp['status']\n\ndisk_size_mib = diskSize * 1024\ndisk_size_bytes = disk_size_mib * 1024**2\n\nresp['spec']['resources']['disk_list'][0]['disk_size_mib'] = disk_size_mib\nresp['spec']['resources']['disk_list'][0]['disk_size_bytes'] = disk_size_bytes\nresp['spec']['resources']['power_state'] = 'OFF'\n\npayload = resp\n\nr = urlreq(api_url, verb='PUT', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    taskUuid = resp['status']['execution_context']['task_uuid']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n\n# Monitor task\nstate = \"\"\nwhile state != \"SUCCEEDED\":\n    api_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/tasks\/{}'.format(pcAddress,taskUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n# Wait for VM to power off\napi_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/vms\/{}'.format(pcAddress,vmUuid)\nr = urlreq(api_url, verb='GET', headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    power_state = resp['status']['resources']['power_state']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\nstate = \"\"\nwhile state != \"OFF\":\n    api_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/vms\/{}'.format(pcAddress,vmUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']['resources']['power_state']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n# Power on VM\ndel resp['status']\n\nresp['spec']['resources']['power_state'] = 'ON'\n\napi_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/vms\/{}'.format(pcAddress,vmUuid)\npayload = resp\n\nr = urlreq(api_url, verb='PUT', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    taskUuid = resp['status']['execution_context']['task_uuid']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n# Monitor task\nstate = \"\"\nwhile state != \"SUCCEEDED\":\n    api_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/tasks\/{}'.format(pcAddress,taskUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\nprint(\"OS disk extended to {} GB\".format(diskSize))\n\n# Wait until VM boots\nsleep(60)\n",
                                            "type": "",
                                            "command_line_args": "",
                                            "exit_status": [],
                                            "script_type": "static"
                                        },
                                        "timeout_secs": "0",
                                        "type": "EXEC",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "ControlPlaneVMs_NTNXPC_Extend_Disk_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "ControlPlaneVMs_NTNXPC_Extend_Disk_dag"
                                },
                                "variable_list": []
                            },
                            "name": "NTNXPC_Extend_Disk"
                        }
                    ],
                    "depends_on_list": [],
                    "name": "ControlPlaneVMs",
                    "port_list": [],
                    "tier": "",
                    "variable_list": [],
                    "description": "Control Plane VMs"
                },
                {
                    "singleton": false,
                    "action_list": [{
                            "description": "System action for creating an application",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "WorkerNodesVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "WorkerNodesVMs___create___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "WorkerNodesVMs___create___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "WorkerNodesVMs___create___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_create"
                        },
                        {
                            "description": "System action for starting an application",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "WorkerNodesVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "WorkerNodesVMs___start___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "WorkerNodesVMs___start___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "WorkerNodesVMs___start___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_start"
                        },
                        {
                            "description": "System action for stopping an application",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "WorkerNodesVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "WorkerNodesVMs___stop___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "WorkerNodesVMs___stop___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "WorkerNodesVMs___stop___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_stop"
                        },
                        {
                            "description": "System action for deleting an application. Deletes created VMs as well",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "WorkerNodesVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "WorkerNodesVMs___delete___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "WorkerNodesVMs___delete___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "WorkerNodesVMs___delete___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_delete"
                        },
                        {
                            "description": "System action for restarting an application",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "WorkerNodesVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "WorkerNodesVMs___restart___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "WorkerNodesVMs___restart___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "WorkerNodesVMs___restart___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_restart"
                        },
                        {
                            "description": "System action for deleting an application. Does not delete created VMs",
                            "type": "system",
                            "critical": true,
                            "runbook": {
                                "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "WorkerNodesVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "WorkerNodesVMs___soft_delete___dag",
                                    "attrs": {
                                        "edges": [],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                }],
                                "description": "",
                                "name": "WorkerNodesVMs___soft_delete___runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "WorkerNodesVMs___soft_delete___dag"
                                },
                                "variable_list": []
                            },
                            "name": "action_soft_delete"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "WorkerNodesVMs"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Install_Docker"
                                        }],
                                        "name": "WorkerNodesVMs_Centos_Install_Docker_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "WorkerNodesVMs"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Install_Docker",
                                        "attrs": {
                                            "script": "# Eject cloud-init\nsudo eject\n\n# Setting SELinux to permissive\nsudo setenforce 0\nsudo sed -i 's\/SELINUX=enforcing\/SELINUX=permissive\/g' \/etc\/selinux\/config\n\nsudo sestatus | grep \"Current mode\"\n\n# Disabling firewalld\nsudo systemctl stop firewalld\nsudo systemctl disable firewalld\n\n# Remove any previous Docker version\nsudo dnf remove docker \\\n  docker-client \\\n  docker-client-latest \\\n  docker-common \\\n  docker-latest \\\n  docker-latest-logrotate \\\n  docker-logrotate \\\n  docker-engine\n\n# Install iptables but disable it (https:\/\/github.com\/moby\/moby\/issues\/41799 & https:\/\/cloud.google.com\/compute\/docs\/troubleshooting\/known-issues)\nsudo dnf install -y iptables-services\nsudo chkconfig iptables off\n\n# Install iSCSI and NFS CentOS packages for Nutanix Volumes and Files CSI support\nsudo dnf install -y iscsi-initiator-utils nfs-utils\nsudo systemctl enable iscsid\nsudo systemctl start iscsid\n\n# Install Docker 19.03+\nsudo dnf install -y yum-utils\nsudo yum-config-manager \\\n    --add-repo \\\n    https:\/\/download.docker.com\/linux\/centos\/docker-ce.repo\nsudo dnf install -y docker-ce docker-ce-cli containerd.io\nsudo systemctl enable docker\nsudo systemctl start docker\n\n# Verify you are now running version 19.03+\nsudo docker version\n\n# Add your user to the docker group\nsudo usermod -aG docker $USER\n\n# Change default cgroup driver to systemd\ncat <<EOF | sudo tee \/etc\/docker\/daemon.json\n{\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"100m\"\n  },\n  \"storage-driver\": \"overlay2\",\n  \"storage-opts\": [\n    \"overlay2.override_kernel_check=true\"\n  ]\n}\nEOF\n\nsudo systemctl restart docker\nsudo docker info | grep -i cgroup\n",
                                            "type": "",
                                            "command_line_args": "",
                                            "exit_status": [],
                                            "script_type": "sh"
                                        },
                                        "timeout_secs": "0",
                                        "type": "EXEC",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "WorkerNodesVMs_Centos_Install_Docker_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "WorkerNodesVMs_Centos_Install_Docker_dag"
                                },
                                "variable_list": []
                            },
                            "name": "Centos_Install_Docker"
                        },
                        {
                            "description": "",
                            "type": "user",
                            "critical": false,
                            "runbook": {
                                "task_definition_list": [{
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "WorkerNodesVMs"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Extend_OS_Disk"
                                        }],
                                        "name": "WorkerNodesVMs_NTNXPC_Extend_Disk_dag",
                                        "attrs": {
                                            "edges": [],
                                            "type": ""
                                        },
                                        "timeout_secs": "0",
                                        "type": "DAG",
                                        "variable_list": []
                                    },
                                    {
                                        "target_any_local_reference": {
                                            "kind": "app_service",
                                            "name": "WorkerNodesVMs"
                                        },
                                        "retries": "0",
                                        "description": "",
                                        "child_tasks_local_reference_list": [],
                                        "name": "Extend_OS_Disk",
                                        "attrs": {
                                            "script": "vmUuid = '@@{id}@@'\ndiskSize = @@{OS_DISK_SIZE}@@ # GB\npcAddress = '@@{NTNX_PC_IP}@@'\npcUsername = '@@{CRED_PC.username}@@'\npcPassword = '@@{CRED_PC.secret}@@'\n\n# ============== DO NO CHANGE AFTER THIS ===============\n\nusrPass = '{}:{}'.format(pcUsername,pcPassword)\nb64Pass = base64.b64encode(usrPass)\n\n# Get VM\napi_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/vms\/{}'.format(pcAddress,vmUuid)\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json', 'Authorization': 'Basic {}'.format(b64Pass)}\n\nr = urlreq(api_url, verb='GET', headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n# Power off VM and extend disk\ndel resp['status']\n\ndisk_size_mib = diskSize * 1024\ndisk_size_bytes = disk_size_mib * 1024**2\n\nresp['spec']['resources']['disk_list'][0]['disk_size_mib'] = disk_size_mib\nresp['spec']['resources']['disk_list'][0]['disk_size_bytes'] = disk_size_bytes\nresp['spec']['resources']['power_state'] = 'OFF'\n\npayload = resp\n\nr = urlreq(api_url, verb='PUT', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    taskUuid = resp['status']['execution_context']['task_uuid']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n\n# Monitor task\nstate = \"\"\nwhile state != \"SUCCEEDED\":\n    api_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/tasks\/{}'.format(pcAddress,taskUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n# Wait for VM to power off\napi_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/vms\/{}'.format(pcAddress,vmUuid)\nr = urlreq(api_url, verb='GET', headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    power_state = resp['status']['resources']['power_state']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\nstate = \"\"\nwhile state != \"OFF\":\n    api_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/vms\/{}'.format(pcAddress,vmUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']['resources']['power_state']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\n# Power on VM\ndel resp['status']\n\nresp['spec']['resources']['power_state'] = 'ON'\n\napi_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/vms\/{}'.format(pcAddress,vmUuid)\npayload = resp\n\nr = urlreq(api_url, verb='PUT', params=json.dumps(payload), headers=headers, verify=False)\nif r.ok:\n    resp = json.loads(r.content)\n    taskUuid = resp['status']['execution_context']['task_uuid']\n\nelse:\n    print(\"Post request failed\", r.content)\n    exit(1)\n\n# Monitor task\nstate = \"\"\nwhile state != \"SUCCEEDED\":\n    api_url = 'https:\/\/{}:9440\/api\/nutanix\/v3\/tasks\/{}'.format(pcAddress,taskUuid)\n\n    sleep(2)\n    r = urlreq(api_url, verb='GET', headers=headers, verify=False)\n    if r.ok:\n        resp = json.loads(r.content)\n        state = resp['status']\n        if state == \"FAILED\":\n            print(\"Task failed\", resp['progress_message'])\n            exit(1)\n\n    else:\n        print(\"Post request failed\", r.content)\n        exit(1)\n\nprint(\"OS disk extended to {} GB\".format(diskSize))\n\n# Wait until VM boots\nsleep(60)\n",
                                            "type": "",
                                            "command_line_args": "",
                                            "exit_status": [],
                                            "script_type": "static"
                                        },
                                        "timeout_secs": "0",
                                        "type": "EXEC",
                                        "variable_list": []
                                    }
                                ],
                                "description": "",
                                "name": "WorkerNodesVMs_NTNXPC_Extend_Disk_runbook",
                                "main_task_local_reference": {
                                    "kind": "app_task",
                                    "name": "WorkerNodesVMs_NTNXPC_Extend_Disk_dag"
                                },
                                "variable_list": []
                            },
                            "name": "NTNXPC_Extend_Disk"
                        }
                    ],
                    "depends_on_list": [],
                    "name": "WorkerNodesVMs",
                    "port_list": [],
                    "tier": "",
                    "variable_list": [],
                    "description": "Worker Nodes VMs"
                }
            ],
            "substrate_definition_list": [{
                    "description": "",
                    "action_list": [],
                    "type": "AHV_VM",
                    "name": "AdminVM_Substrate",
                    "readiness_probe": {
                        "connection_type": "SSH",
                        "retries": "5",
                        "connection_protocol": "",
                        "connection_port": 22,
                        "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@",
                        "delay_secs": "60",
                        "disable_readiness_probe": false,
                        "login_credential_local_reference": {
                            "kind": "app_credential",
                            "name": "CRED_OS"
                        }
                    },
                    "os_type": "Linux",
                    "create_spec": {
                        "name": "@@{ANTHOS_CLUSTER_NAME}@@-anthos-adminVm-@@{calm_array_index}@@",
                        "resources": {
                            "nic_list": [{
                                "nic_type": "NORMAL_NIC",
                                "ip_endpoint_list": [],
                                "network_function_chain_reference": null,
                                "network_function_nic_type": "INGRESS",
                                "mac_address": "",
                                "subnet_reference": {
                                    "kind": "subnet",
                                    "type": "",
                                    "name": "subnet",
                                    "uuid": "00000000-0000-0000-0000-000000000000"
                                },
                                "type": ""
                            }],
                            "serial_port_list": [],
                            "guest_tools": null,
                            "num_vcpus_per_socket": 1,
                            "num_sockets": 4,
                            "gpu_list": [],
                            "memory_size_mib": 32768,
                            "parent_reference": null,
                            "hardware_clock_timezone": "",
                            "guest_customization": {
                                "cloud_init": {
                                    "meta_data": "",
                                    "type": "",
                                    "user_data": "#cloud-config\nhostname: @@{name}@@\nusers:\n    - name: @@{CRED_OS.username}@@\n      ssh-authorized-keys:\n        - @@{CRED_OS.public_key}@@\n      sudo: ['ALL=(ALL) NOPASSWD:ALL']\nruncmd:\n    - yum install -y lvm2"
                                },
                                "type": "",
                                "sysprep": null
                            },
                            "power_state": "ON",
                            "type": "",
                            "account_uuid": "07d7bfd2-dab5-4562-b760-2d2eeccc7d98",
                            "boot_config": {
                                "boot_device": {
                                    "type": "",
                                    "disk_address": {
                                        "type": "",
                                        "device_index": 0,
                                        "adapter_type": "PCI"
                                    }
                                },
                                "type": "",
                                "boot_type": "",
                                "mac_address": ""
                            },
                            "disk_list": [{
                                "data_source_reference": {
                                    "kind": "app_package",
                                    "type": "",
                                    "name": "AHV_CENTOS",
                                    "uuid": "f20cc979-98ad-46e4-a981-199218f22644"
                                },
                                "type": "",
                                "disk_size_mib": 131072,
                                "volume_group_reference": null,
                                "device_properties": {
                                    "type": "",
                                    "disk_address": {
                                        "type": "",
                                        "device_index": 0,
                                        "adapter_type": "PCI"
                                    },
                                    "device_type": "DISK"
                                }
                            }]
                        },
                        "availability_zone_reference": null,
                        "backup_policy": null,
                        "type": "",
                        "cluster_reference": null,
                        "categories": ""
                    },
                    "variable_list": []
                },
                {
                    "description": "",
                    "action_list": [],
                    "type": "AHV_VM",
                    "name": "ControlPlaneVMs_Substrate",
                    "readiness_probe": {
                        "connection_type": "SSH",
                        "retries": "5",
                        "connection_protocol": "",
                        "connection_port": 22,
                        "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@",
                        "delay_secs": "60",
                        "disable_readiness_probe": false,
                        "login_credential_local_reference": {
                            "kind": "app_credential",
                            "name": "CRED_OS"
                        }
                    },
                    "os_type": "Linux",
                    "create_spec": {
                        "name": "@@{ANTHOS_CLUSTER_NAME}@@-anthos-controlVm-@@{calm_array_index}@@",
                        "resources": {
                            "nic_list": [{
                                "nic_type": "NORMAL_NIC",
                                "ip_endpoint_list": [],
                                "network_function_chain_reference": null,
                                "network_function_nic_type": "INGRESS",
                                "mac_address": "",
                                "subnet_reference": {
                                    "kind": "subnet",
                                    "type": "",
                                    "name": "subnet",
                                    "uuid": "00000000-0000-0000-0000-000000000000"
                                },
                                "type": ""
                            }],
                            "serial_port_list": [],
                            "guest_tools": null,
                            "num_vcpus_per_socket": 1,
                            "num_sockets": 4,
                            "gpu_list": [],
                            "memory_size_mib": 32768,
                            "parent_reference": null,
                            "hardware_clock_timezone": "",
                            "guest_customization": {
                                "cloud_init": {
                                    "meta_data": "",
                                    "type": "",
                                    "user_data": "#cloud-config\nhostname: @@{name}@@\nusers:\n    - name: @@{CRED_OS.username}@@\n      ssh-authorized-keys:\n        - @@{CRED_OS.public_key}@@\n      sudo: ['ALL=(ALL) NOPASSWD:ALL']\nruncmd:\n    - yum install -y lvm2"
                                },
                                "type": "",
                                "sysprep": null
                            },
                            "power_state": "ON",
                            "type": "",
                            "account_uuid": "07d7bfd2-dab5-4562-b760-2d2eeccc7d98",
                            "boot_config": {
                                "boot_device": {
                                    "type": "",
                                    "disk_address": {
                                        "type": "",
                                        "device_index": 0,
                                        "adapter_type": "PCI"
                                    }
                                },
                                "type": "",
                                "boot_type": "",
                                "mac_address": ""
                            },
                            "disk_list": [{
                                "data_source_reference": {
                                    "kind": "app_package",
                                    "type": "",
                                    "name": "AHV_CENTOS",
                                    "uuid": "f20cc979-98ad-46e4-a981-199218f22644"
                                },
                                "type": "",
                                "disk_size_mib": 131072,
                                "volume_group_reference": null,
                                "device_properties": {
                                    "type": "",
                                    "disk_address": {
                                        "type": "",
                                        "device_index": 0,
                                        "adapter_type": "PCI"
                                    },
                                    "device_type": "DISK"
                                }
                            }]
                        },
                        "availability_zone_reference": null,
                        "backup_policy": null,
                        "type": "",
                        "cluster_reference": null,
                        "categories": ""
                    },
                    "variable_list": []
                },
                {
                    "description": "",
                    "action_list": [],
                    "type": "AHV_VM",
                    "name": "WorkerNodesVMs_Substrate",
                    "readiness_probe": {
                        "connection_type": "SSH",
                        "retries": "5",
                        "connection_protocol": "",
                        "connection_port": 22,
                        "address": "@@{platform.status.resources.nic_list[0].ip_endpoint_list[0].ip}@@",
                        "delay_secs": "60",
                        "disable_readiness_probe": false,
                        "login_credential_local_reference": {
                            "kind": "app_credential",
                            "name": "CRED_OS"
                        }
                    },
                    "os_type": "Linux",
                    "create_spec": {
                        "name": "@@{ANTHOS_CLUSTER_NAME}@@-anthos-workerVm-@@{calm_array_index}@@",
                        "resources": {
                            "nic_list": [{
                                "nic_type": "NORMAL_NIC",
                                "ip_endpoint_list": [],
                                "network_function_chain_reference": null,
                                "network_function_nic_type": "INGRESS",
                                "mac_address": "",
                                "subnet_reference": {
                                    "kind": "subnet",
                                    "type": "",
                                    "name": "subnet",
                                    "uuid": "00000000-0000-0000-0000-000000000000"
                                },
                                "type": ""
                            }],
                            "serial_port_list": [],
                            "guest_tools": null,
                            "num_vcpus_per_socket": 1,
                            "num_sockets": 4,
                            "gpu_list": [],
                            "memory_size_mib": 32768,
                            "parent_reference": null,
                            "hardware_clock_timezone": "",
                            "guest_customization": {
                                "cloud_init": {
                                    "meta_data": "",
                                    "type": "",
                                    "user_data": "#cloud-config\nhostname: @@{name}@@\nusers:\n    - name: @@{CRED_OS.username}@@\n      ssh-authorized-keys:\n        - @@{CRED_OS.public_key}@@\n      sudo: ['ALL=(ALL) NOPASSWD:ALL']\nruncmd:\n    - yum install -y lvm2"
                                },
                                "type": "",
                                "sysprep": null
                            },
                            "power_state": "ON",
                            "type": "",
                            "account_uuid": "07d7bfd2-dab5-4562-b760-2d2eeccc7d98",
                            "boot_config": {
                                "boot_device": {
                                    "type": "",
                                    "disk_address": {
                                        "type": "",
                                        "device_index": 0,
                                        "adapter_type": "PCI"
                                    }
                                },
                                "type": "",
                                "boot_type": "",
                                "mac_address": ""
                            },
                            "disk_list": [{
                                "data_source_reference": {
                                    "kind": "app_package",
                                    "type": "",
                                    "name": "AHV_CENTOS",
                                    "uuid": "f20cc979-98ad-46e4-a981-199218f22644"
                                },
                                "type": "",
                                "disk_size_mib": 131072,
                                "volume_group_reference": null,
                                "device_properties": {
                                    "type": "",
                                    "disk_address": {
                                        "type": "",
                                        "device_index": 0,
                                        "adapter_type": "PCI"
                                    },
                                    "device_type": "DISK"
                                }
                            }]
                        },
                        "availability_zone_reference": null,
                        "backup_policy": null,
                        "type": "",
                        "cluster_reference": null,
                        "categories": ""
                    },
                    "variable_list": []
                }
            ],
            "credential_definition_list": [{
                    "username": "nutanix",
                    "description": "",
                    "type": "KEY",
                    "secret": {
                        "attrs": {
                            "is_secret_modified": false,
                            "secret_reference": {}
                        }
                    },
                    "name": "CRED_OS"
                },
                {
                    "username": "username@prism_central",
                    "description": "",
                    "type": "PASSWORD",
                    "secret": {
                        "attrs": {
                            "is_secret_modified": false,
                            "secret_reference": {}
                        }
                    },
                    "name": "CRED_PC"
                },
                {
                    "username": "username@prism_element",
                    "description": "",
                    "type": "PASSWORD",
                    "secret": {
                        "attrs": {
                            "is_secret_modified": false,
                            "secret_reference": {}
                        }
                    },
                    "name": "CRED_PE"
                },
                {
                    "username": "service_account@project.iam.gserviceaccount.com",
                    "description": "",
                    "type": "KEY",
                    "secret": {
                        "attrs": {
                            "is_secret_modified": false,
                            "secret_reference": {}
                        }
                    },
                    "name": "CRED_GCLOUD"
                }
            ],
            "package_definition_list": [{
                    "description": "",
                    "action_list": [],
                    "type": "CUSTOM",
                    "service_local_reference_list": [{
                        "kind": "app_service",
                        "name": "AdminVM"
                    }],
                    "name": "AdminVM_Package",
                    "version": "",
                    "options": {
                        "install_runbook": {
                            "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "AdminVM"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "NTNXPC_Extend_Disk"
                                        },
                                        {
                                            "kind": "app_task",
                                            "name": "Centos_Install_Docker"
                                        },
                                        {
                                            "kind": "app_task",
                                            "name": "Gcloud_Install_SDK"
                                        }
                                    ],
                                    "name": "AdminVM_Package___install___dag",
                                    "attrs": {
                                        "edges": [{
                                                "from_task_reference": {
                                                    "kind": "app_task",
                                                    "name": "NTNXPC_Extend_Disk"
                                                },
                                                "edge_type": "user_defined",
                                                "type": "",
                                                "to_task_reference": {
                                                    "kind": "app_task",
                                                    "name": "Centos_Install_Docker"
                                                }
                                            },
                                            {
                                                "from_task_reference": {
                                                    "kind": "app_task",
                                                    "name": "Centos_Install_Docker"
                                                },
                                                "edge_type": "user_defined",
                                                "type": "",
                                                "to_task_reference": {
                                                    "kind": "app_task",
                                                    "name": "Gcloud_Install_SDK"
                                                }
                                            }
                                        ],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "AdminVM"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "NTNXPC_Extend_Disk",
                                    "attrs": {
                                        "type": "",
                                        "inarg_list": [],
                                        "runbook_reference": {
                                            "kind": "app_runbook",
                                            "name": "AdminVM_NTNXPC_Extend_Disk_runbook"
                                        }
                                    },
                                    "timeout_secs": "0",
                                    "type": "CALL_RUNBOOK",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "AdminVM"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "Centos_Install_Docker",
                                    "attrs": {
                                        "type": "",
                                        "inarg_list": [],
                                        "runbook_reference": {
                                            "kind": "app_runbook",
                                            "name": "AdminVM_Centos_Install_Docker_runbook"
                                        }
                                    },
                                    "timeout_secs": "0",
                                    "type": "CALL_RUNBOOK",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "AdminVM"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "Gcloud_Install_SDK",
                                    "attrs": {
                                        "type": "",
                                        "inarg_list": [],
                                        "runbook_reference": {
                                            "kind": "app_runbook",
                                            "name": "AdminVM_Gcloud_Install_SDK_runbook"
                                        }
                                    },
                                    "timeout_secs": "0",
                                    "type": "CALL_RUNBOOK",
                                    "variable_list": []
                                }
                            ],
                            "description": "",
                            "name": "AdminVM_Package___install___runbook",
                            "main_task_local_reference": {
                                "kind": "app_task",
                                "name": "AdminVM_Package___install___dag"
                            },
                            "variable_list": []
                        },
                        "type": "",
                        "uninstall_runbook": {
                            "task_definition_list": [{
                                "target_any_local_reference": {
                                    "kind": "app_service",
                                    "name": "AdminVM"
                                },
                                "retries": "0",
                                "description": "",
                                "child_tasks_local_reference_list": [],
                                "name": "DAG_Task_for_Package_AdminVM_Package_action_uninstall",
                                "attrs": {
                                    "edges": [],
                                    "type": ""
                                },
                                "timeout_secs": "0",
                                "type": "DAG",
                                "variable_list": []
                            }],
                            "description": "",
                            "name": "Runbook_for_Package_AdminVM_Package_action_uninstall",
                            "main_task_local_reference": {
                                "kind": "app_task",
                                "name": "DAG_Task_for_Package_AdminVM_Package_action_uninstall"
                            },
                            "variable_list": []
                        }
                    },
                    "variable_list": []
                },
                {
                    "description": "",
                    "action_list": [],
                    "type": "CUSTOM",
                    "service_local_reference_list": [{
                        "kind": "app_service",
                        "name": "ControlPlaneVMs"
                    }],
                    "name": "ControlPlaneVMs_Package",
                    "version": "",
                    "options": {
                        "install_runbook": {
                            "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "ControlPlaneVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "NTNXPC_Extend_Disk"
                                        },
                                        {
                                            "kind": "app_task",
                                            "name": "Centos_Install_Docker"
                                        }
                                    ],
                                    "name": "ControlPlaneVMs_Package___install___dag",
                                    "attrs": {
                                        "edges": [{
                                            "from_task_reference": {
                                                "kind": "app_task",
                                                "name": "NTNXPC_Extend_Disk"
                                            },
                                            "edge_type": "user_defined",
                                            "type": "",
                                            "to_task_reference": {
                                                "kind": "app_task",
                                                "name": "Centos_Install_Docker"
                                            }
                                        }],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "ControlPlaneVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "NTNXPC_Extend_Disk",
                                    "attrs": {
                                        "type": "",
                                        "inarg_list": [],
                                        "runbook_reference": {
                                            "kind": "app_runbook",
                                            "name": "ControlPlaneVMs_NTNXPC_Extend_Disk_runbook"
                                        }
                                    },
                                    "timeout_secs": "0",
                                    "type": "CALL_RUNBOOK",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "ControlPlaneVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "Centos_Install_Docker",
                                    "attrs": {
                                        "type": "",
                                        "inarg_list": [],
                                        "runbook_reference": {
                                            "kind": "app_runbook",
                                            "name": "ControlPlaneVMs_Centos_Install_Docker_runbook"
                                        }
                                    },
                                    "timeout_secs": "0",
                                    "type": "CALL_RUNBOOK",
                                    "variable_list": []
                                }
                            ],
                            "description": "",
                            "name": "ControlPlaneVMs_Package___install___runbook",
                            "main_task_local_reference": {
                                "kind": "app_task",
                                "name": "ControlPlaneVMs_Package___install___dag"
                            },
                            "variable_list": []
                        },
                        "type": "",
                        "uninstall_runbook": {
                            "task_definition_list": [{
                                "target_any_local_reference": {
                                    "kind": "app_service",
                                    "name": "ControlPlaneVMs"
                                },
                                "retries": "0",
                                "description": "",
                                "child_tasks_local_reference_list": [],
                                "name": "DAG_Task_for_Package_ControlPlaneVMs_Package_action_uninstall",
                                "attrs": {
                                    "edges": [],
                                    "type": ""
                                },
                                "timeout_secs": "0",
                                "type": "DAG",
                                "variable_list": []
                            }],
                            "description": "",
                            "name": "Runbook_for_Package_ControlPlaneVMs_Package_action_uninstall",
                            "main_task_local_reference": {
                                "kind": "app_task",
                                "name": "DAG_Task_for_Package_ControlPlaneVMs_Package_action_uninstall"
                            },
                            "variable_list": []
                        }
                    },
                    "variable_list": []
                },
                {
                    "description": "",
                    "action_list": [],
                    "type": "CUSTOM",
                    "service_local_reference_list": [{
                        "kind": "app_service",
                        "name": "WorkerNodesVMs"
                    }],
                    "name": "WorkerNodesVMs_Package",
                    "version": "",
                    "options": {
                        "install_runbook": {
                            "task_definition_list": [{
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "WorkerNodesVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "NTNXPC_Extend_Disk"
                                        },
                                        {
                                            "kind": "app_task",
                                            "name": "Centos_Install_Docker"
                                        }
                                    ],
                                    "name": "WorkerNodesVMs_Package___install___dag",
                                    "attrs": {
                                        "edges": [{
                                            "from_task_reference": {
                                                "kind": "app_task",
                                                "name": "NTNXPC_Extend_Disk"
                                            },
                                            "edge_type": "user_defined",
                                            "type": "",
                                            "to_task_reference": {
                                                "kind": "app_task",
                                                "name": "Centos_Install_Docker"
                                            }
                                        }],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "WorkerNodesVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "NTNXPC_Extend_Disk",
                                    "attrs": {
                                        "type": "",
                                        "inarg_list": [],
                                        "runbook_reference": {
                                            "kind": "app_runbook",
                                            "name": "WorkerNodesVMs_NTNXPC_Extend_Disk_runbook"
                                        }
                                    },
                                    "timeout_secs": "0",
                                    "type": "CALL_RUNBOOK",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "WorkerNodesVMs"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "Centos_Install_Docker",
                                    "attrs": {
                                        "type": "",
                                        "inarg_list": [],
                                        "runbook_reference": {
                                            "kind": "app_runbook",
                                            "name": "WorkerNodesVMs_Centos_Install_Docker_runbook"
                                        }
                                    },
                                    "timeout_secs": "0",
                                    "type": "CALL_RUNBOOK",
                                    "variable_list": []
                                }
                            ],
                            "description": "",
                            "name": "WorkerNodesVMs_Package___install___runbook",
                            "main_task_local_reference": {
                                "kind": "app_task",
                                "name": "WorkerNodesVMs_Package___install___dag"
                            },
                            "variable_list": []
                        },
                        "type": "",
                        "uninstall_runbook": {
                            "task_definition_list": [{
                                "target_any_local_reference": {
                                    "kind": "app_service",
                                    "name": "WorkerNodesVMs"
                                },
                                "retries": "0",
                                "description": "",
                                "child_tasks_local_reference_list": [],
                                "name": "DAG_Task_for_Package_WorkerNodesVMs_Package_action_uninstall",
                                "attrs": {
                                    "edges": [],
                                    "type": ""
                                },
                                "timeout_secs": "0",
                                "type": "DAG",
                                "variable_list": []
                            }],
                            "description": "",
                            "name": "Runbook_for_Package_WorkerNodesVMs_Package_action_uninstall",
                            "main_task_local_reference": {
                                "kind": "app_task",
                                "name": "DAG_Task_for_Package_WorkerNodesVMs_Package_action_uninstall"
                            },
                            "variable_list": []
                        }
                    },
                    "variable_list": []
                },
                {
                    "description": "",
                    "action_list": [],
                    "type": "SUBSTRATE_IMAGE",
                    "service_local_reference_list": [],
                    "name": "AHV_CENTOS",
                    "version": "",
                    "options": {
                        "type": "",
                        "name": "AHV_CENTOS_82",
                        "resources": {
                            "image_type": "DISK_IMAGE",
                            "checksum": {
                                "checksum_algorithm": "",
                                "type": "",
                                "checksum_value": ""
                            },
                            "source_uri": "https:\/\/cloud.centos.org\/centos\/8\/x86_64\/images\/CentOS-8-GenericCloud-8.2.2004-20200611.2.x86_64.qcow2",
                            "version": {
                                "product_version": "8.2.2004-20200611.2",
                                "type": "",
                                "product_name": "AHV_CENTOS_82"
                            },
                            "architecture": "X86_64",
                            "type": ""
                        },
                        "description": ""
                    },
                    "variable_list": []
                }
            ],
            "app_profile_list": [{
                "deployment_create_list": [{
                        "type": "GREENFIELD",
                        "action_list": [],
                        "name": "AdminVM_Deployment",
                        "min_replicas": "1",
                        "default_replicas": "",
                        "depends_on_list": [],
                        "published_service_local_reference_list": [],
                        "max_replicas": "1",
                        "package_local_reference_list": [{
                            "kind": "app_package",
                            "name": "AdminVM_Package"
                        }],
                        "substrate_local_reference": {
                            "kind": "app_substrate",
                            "name": "AdminVM_Substrate"
                        },
                        "options": {
                            "type": ""
                        },
                        "variable_list": [],
                        "description": ""
                    },
                    {
                        "type": "GREENFIELD",
                        "action_list": [],
                        "name": "ControlPlaneVMs_Deployment",
                        "min_replicas": "3",
                        "default_replicas": "",
                        "depends_on_list": [],
                        "published_service_local_reference_list": [],
                        "max_replicas": "3",
                        "package_local_reference_list": [{
                            "kind": "app_package",
                            "name": "ControlPlaneVMs_Package"
                        }],
                        "substrate_local_reference": {
                            "kind": "app_substrate",
                            "name": "ControlPlaneVMs_Substrate"
                        },
                        "options": {
                            "type": ""
                        },
                        "variable_list": [],
                        "description": ""
                    },
                    {
                        "type": "GREENFIELD",
                        "action_list": [],
                        "name": "WorkerNodesVMs_Deployment",
                        "min_replicas": "2",
                        "default_replicas": "",
                        "depends_on_list": [],
                        "published_service_local_reference_list": [],
                        "max_replicas": "99",
                        "package_local_reference_list": [{
                            "kind": "app_package",
                            "name": "WorkerNodesVMs_Package"
                        }],
                        "substrate_local_reference": {
                            "kind": "app_substrate",
                            "name": "WorkerNodesVMs_Substrate"
                        },
                        "options": {
                            "type": ""
                        },
                        "variable_list": [],
                        "description": ""
                    }
                ],
                "environment_reference_list": [],
                "description": "",
                "action_list": [{
                        "description": "This action will scale out worker nodes by given scale out count",
                        "type": "user",
                        "critical": false,
                        "runbook": {
                            "task_definition_list": [{
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Scale out worker nodes"
                                        },
                                        {
                                            "kind": "app_task",
                                            "name": "Source_Variables"
                                        },
                                        {
                                            "kind": "app_task",
                                            "name": "Anthos_Scale_Cluster"
                                        }
                                    ],
                                    "name": "Default_ScaleOut_dag",
                                    "attrs": {
                                        "edges": [{
                                                "from_task_reference": {
                                                    "kind": "app_task",
                                                    "name": "Scale out worker nodes"
                                                },
                                                "edge_type": "user_defined",
                                                "type": "",
                                                "to_task_reference": {
                                                    "kind": "app_task",
                                                    "name": "Source_Variables"
                                                }
                                            },
                                            {
                                                "from_task_reference": {
                                                    "kind": "app_task",
                                                    "name": "Source_Variables"
                                                },
                                                "edge_type": "user_defined",
                                                "type": "",
                                                "to_task_reference": {
                                                    "kind": "app_task",
                                                    "name": "Anthos_Scale_Cluster"
                                                }
                                            }
                                        ],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_blueprint_deployment",
                                        "name": "WorkerNodesVMs_Deployment"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "Scale out worker nodes",
                                    "attrs": {
                                        "scaling_count": "@@{ScaleOut}@@",
                                        "type": "",
                                        "scaling_type": "SCALEOUT"
                                    },
                                    "timeout_secs": "0",
                                    "type": "SCALING",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "AdminVM"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "Source_Variables",
                                    "attrs": {
                                        "type": "",
                                        "inarg_list": [],
                                        "runbook_reference": {
                                            "kind": "app_runbook",
                                            "name": "AdminVM_Source_Variables_runbook"
                                        }
                                    },
                                    "timeout_secs": "0",
                                    "type": "CALL_RUNBOOK",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "AdminVM"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "Anthos_Scale_Cluster",
                                    "attrs": {
                                        "type": "",
                                        "inarg_list": [],
                                        "runbook_reference": {
                                            "kind": "app_runbook",
                                            "name": "AdminVM_Anthos_Scale_Cluster_runbook"
                                        }
                                    },
                                    "timeout_secs": "0",
                                    "type": "CALL_RUNBOOK",
                                    "variable_list": []
                                }
                            ],
                            "description": "",
                            "name": "Default_ScaleOut_runbook",
                            "main_task_local_reference": {
                                "kind": "app_task",
                                "name": "Default_ScaleOut_dag"
                            },
                            "variable_list": [{
                                "regex": {
                                    "should_validate": false,
                                    "value": "^[\\d]*$"
                                },
                                "val_type": "INT",
                                "is_mandatory": true,
                                "description": "",
                                "data_type": "BASE",
                                "type": "LOCAL",
                                "name": "ScaleOut",
                                "value": "1",
                                "label": "",
                                "attrs": {
                                    "type": ""
                                },
                                "editables": {
                                    "value": true
                                },
                                "is_hidden": false
                            }]
                        },
                        "name": "ScaleOut"
                    },
                    {
                        "description": "This action will scale in workder nodes by given scale in count",
                        "type": "user",
                        "critical": false,
                        "runbook": {
                            "task_definition_list": [{
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Source_Variables"
                                        },
                                        {
                                            "kind": "app_task",
                                            "name": "Anthos_Scale_Cluster"
                                        },
                                        {
                                            "kind": "app_task",
                                            "name": "Scale in worker nodes"
                                        }
                                    ],
                                    "name": "Default_ScaleIn_dag",
                                    "attrs": {
                                        "edges": [{
                                                "from_task_reference": {
                                                    "kind": "app_task",
                                                    "name": "Source_Variables"
                                                },
                                                "edge_type": "user_defined",
                                                "type": "",
                                                "to_task_reference": {
                                                    "kind": "app_task",
                                                    "name": "Anthos_Scale_Cluster"
                                                }
                                            },
                                            {
                                                "from_task_reference": {
                                                    "kind": "app_task",
                                                    "name": "Anthos_Scale_Cluster"
                                                },
                                                "edge_type": "user_defined",
                                                "type": "",
                                                "to_task_reference": {
                                                    "kind": "app_task",
                                                    "name": "Scale in worker nodes"
                                                }
                                            }
                                        ],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "AdminVM"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "Source_Variables",
                                    "attrs": {
                                        "type": "",
                                        "inarg_list": [],
                                        "runbook_reference": {
                                            "kind": "app_runbook",
                                            "name": "AdminVM_Source_Variables_runbook"
                                        }
                                    },
                                    "timeout_secs": "0",
                                    "type": "CALL_RUNBOOK",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "AdminVM"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "Anthos_Scale_Cluster",
                                    "attrs": {
                                        "type": "",
                                        "inarg_list": [],
                                        "runbook_reference": {
                                            "kind": "app_runbook",
                                            "name": "AdminVM_Anthos_Scale_Cluster_runbook"
                                        }
                                    },
                                    "timeout_secs": "0",
                                    "type": "CALL_RUNBOOK",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_blueprint_deployment",
                                        "name": "WorkerNodesVMs_Deployment"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "Scale in worker nodes",
                                    "attrs": {
                                        "scaling_count": "@@{ScaleIn}@@",
                                        "type": "",
                                        "scaling_type": "SCALEIN"
                                    },
                                    "timeout_secs": "0",
                                    "type": "SCALING",
                                    "variable_list": []
                                }
                            ],
                            "description": "",
                            "name": "Default_ScaleIn_runbook",
                            "main_task_local_reference": {
                                "kind": "app_task",
                                "name": "Default_ScaleIn_dag"
                            },
                            "variable_list": [{
                                "regex": {
                                    "should_validate": false,
                                    "value": "^[\\d]*$"
                                },
                                "val_type": "INT",
                                "is_mandatory": true,
                                "description": "",
                                "data_type": "BASE",
                                "type": "LOCAL",
                                "name": "ScaleIn",
                                "value": "1",
                                "label": "",
                                "attrs": {
                                    "type": ""
                                },
                                "editables": {
                                    "value": true
                                },
                                "is_hidden": false
                            }]
                        },
                        "name": "ScaleIn"
                    },
                    {
                        "description": "This action will upgrade the Anthos cluster to a new version",
                        "type": "user",
                        "critical": false,
                        "runbook": {
                            "task_definition_list": [{
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [{
                                            "kind": "app_task",
                                            "name": "Source_Variables"
                                        },
                                        {
                                            "kind": "app_task",
                                            "name": "Anthos_Upgrade_Cluster"
                                        }
                                    ],
                                    "name": "Default_UpgradeCluster_dag",
                                    "attrs": {
                                        "edges": [{
                                            "from_task_reference": {
                                                "kind": "app_task",
                                                "name": "Source_Variables"
                                            },
                                            "edge_type": "user_defined",
                                            "type": "",
                                            "to_task_reference": {
                                                "kind": "app_task",
                                                "name": "Anthos_Upgrade_Cluster"
                                            }
                                        }],
                                        "type": ""
                                    },
                                    "timeout_secs": "0",
                                    "type": "DAG",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "AdminVM"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "Source_Variables",
                                    "attrs": {
                                        "type": "",
                                        "inarg_list": [],
                                        "runbook_reference": {
                                            "kind": "app_runbook",
                                            "name": "AdminVM_Source_Variables_runbook"
                                        }
                                    },
                                    "timeout_secs": "0",
                                    "type": "CALL_RUNBOOK",
                                    "variable_list": []
                                },
                                {
                                    "target_any_local_reference": {
                                        "kind": "app_service",
                                        "name": "AdminVM"
                                    },
                                    "retries": "0",
                                    "description": "",
                                    "child_tasks_local_reference_list": [],
                                    "name": "Anthos_Upgrade_Cluster",
                                    "attrs": {
                                        "type": "",
                                        "inarg_list": [],
                                        "runbook_reference": {
                                            "kind": "app_runbook",
                                            "name": "AdminVM_Anthos_Upgrade_Cluster_runbook"
                                        }
                                    },
                                    "timeout_secs": "0",
                                    "type": "CALL_RUNBOOK",
                                    "variable_list": []
                                }
                            ],
                            "description": "",
                            "name": "Default_UpgradeCluster_runbook",
                            "main_task_local_reference": {
                                "kind": "app_task",
                                "name": "Default_UpgradeCluster_dag"
                            },
                            "variable_list": [{
                                "val_type": "STRING",
                                "is_mandatory": true,
                                "description": "The available versions are not supported yet but they can be tested.",
                                "data_type": "BASE",
                                "type": "LOCAL",
                                "name": "ANTHOS_VERSION",
                                "value": "1.6.2",
                                "label": "Anthos cluster version",
                                "attrs": {
                                    "type": ""
                                },
                                "editables": {
                                    "value": true
                                },
                                "is_hidden": false,
                                "options": {
                                    "type": "PREDEFINED",
                                    "choices": [
                                        "1.6.2",
                                        "1.7.0"
                                    ]
                                }
                            }]
                        },
                        "name": "UpgradeCluster"
                    }
                ],
                "name": "Default",
                "variable_list": [{
                        "val_type": "STRING",
                        "is_mandatory": false,
                        "description": "This script is hosted externally and produce an Anthos configuration \n            file for cluster creation with user provided inputs during launch.\n            DO NOT CHANGE default value unless you will host the script in an internal repository",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "PYTHON_ANTHOS_GENCONFIG",
                        "value": "https:\/\/raw.githubusercontent.com\/pipoe2h\/calm-dsl\/anthos-on-ahv\/blueprints\/anthos-on-ahv\/scripts\/anthos_generate_config.py",
                        "label": "Python Parser URL",
                        "attrs": {
                            "type": ""
                        },
                        "is_hidden": true
                    },
                    {
                        "val_type": "STRING",
                        "is_mandatory": true,
                        "description": "\n            This K8s SA is for Google Cloud Console so the K8s cluster can be managed in GKE. \n            This service account will have cluster-admin role for Google Cloud Marketplace to work. \n            Default: google-cloud-console",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "KUBERNETES_SERVICE_ACCOUNT",
                        "value": "google-cloud-console",
                        "label": "Kubernetes SA Cloud Console",
                        "attrs": {
                            "type": ""
                        },
                        "editables": {
                            "value": true
                        },
                        "is_hidden": false
                    },
                    {
                        "regex": {
                            "should_validate": true,
                            "value": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)-(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
                        },
                        "val_type": "STRING",
                        "is_mandatory": true,
                        "description": "This is the IP address range for Load Balancing. \n            Format: XXX.XXX.XXX.XXX-YYY.YYY.YYY.YYY",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "ANTHOS_LB_ADDRESSPOOL",
                        "value": "",
                        "label": "Anthos Load Balancing pool",
                        "attrs": {
                            "type": ""
                        },
                        "editables": {
                            "value": true
                        },
                        "is_hidden": false
                    },
                    {
                        "regex": {
                            "should_validate": true,
                            "value": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
                        },
                        "val_type": "STRING",
                        "is_mandatory": true,
                        "description": "This is the IP address for Kubernetes Ingress. \n            This address MUST be within the load balancing pool. Format: XXX.XXX.XXX.XXX",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "ANTHOS_INGRESS_VIP",
                        "value": "",
                        "label": "Anthos Kubernetes Ingress VIP",
                        "attrs": {
                            "type": ""
                        },
                        "editables": {
                            "value": true
                        },
                        "is_hidden": false
                    },
                    {
                        "regex": {
                            "should_validate": true,
                            "value": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
                        },
                        "val_type": "STRING",
                        "is_mandatory": true,
                        "description": "This is the IP address for Kubernetes API. Format: XXX.XXX.XXX.XXX",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "ANTHOS_CONTROLPLANE_VIP",
                        "value": "",
                        "label": "Anthos cluster VIP",
                        "attrs": {
                            "type": ""
                        },
                        "editables": {
                            "value": true
                        },
                        "is_hidden": false
                    },
                    {
                        "regex": {
                            "should_validate": true,
                            "value": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
                        },
                        "val_type": "STRING",
                        "is_mandatory": true,
                        "description": "This is the network for your pods. Preferably do not overlap with other networks. \n            CIDR format: XXX.XXX.XXX.XXX\/XX",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "ANTHOS_PODS_NETWORK",
                        "value": "172.30.0.0\/16",
                        "label": "Anthos Kubernetes pods network",
                        "attrs": {
                            "type": ""
                        },
                        "editables": {
                            "value": true
                        },
                        "is_hidden": false
                    },
                    {
                        "regex": {
                            "should_validate": true,
                            "value": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
                        },
                        "val_type": "STRING",
                        "is_mandatory": true,
                        "description": "This is the network for your services. Preferably do not overlap with other networks. \n            CIDR format: XXX.XXX.XXX.XXX\/XX",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "ANTHOS_SERVICES_NETWORK",
                        "value": "172.31.0.0\/16",
                        "label": "Anthos Kubernetes services network",
                        "attrs": {
                            "type": ""
                        },
                        "editables": {
                            "value": true
                        },
                        "is_hidden": false
                    },
                    {
                        "val_type": "STRING",
                        "is_mandatory": true,
                        "description": "",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "ANTHOS_VERSION",
                        "value": "1.6.1",
                        "label": "Anthos cluster version",
                        "attrs": {
                            "type": ""
                        },
                        "editables": {
                            "value": true
                        },
                        "is_hidden": false,
                        "options": {
                            "type": "PREDEFINED",
                            "choices": [
                                "1.6.1",
                                "1.6.2",
                                "1.7.0"
                            ]
                        }
                    },
                    {
                        "val_type": "STRING",
                        "is_mandatory": true,
                        "description": "",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "ANTHOS_CLUSTER_NAME",
                        "value": "@@{calm_application_name}@@",
                        "label": "Anthos cluster name",
                        "attrs": {
                            "type": ""
                        },
                        "editables": {
                            "value": true
                        },
                        "is_hidden": false
                    },
                    {
                        "val_type": "STRING",
                        "is_mandatory": true,
                        "description": "This is the Nutanix Storage Container where the requested Persistent Volume Claims will\n            get their volumes created. You can enable things like compression and deduplication in a Storage Container.\n            The recommendation is to create at least one storage container in Prism Element well identified for Kubernetes usage.\n            This will facilitate the search of persistent volumes when the environment scales",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "NTNX_PE_STORAGE_CONTAINER",
                        "value": "",
                        "label": "Storage Container in Prism Element",
                        "attrs": {
                            "type": ""
                        },
                        "editables": {
                            "value": true
                        },
                        "is_hidden": false
                    },
                    {
                        "regex": {
                            "should_validate": true,
                            "value": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
                        },
                        "val_type": "STRING",
                        "is_mandatory": true,
                        "description": "Data service is required to allow iSCSI connectivity between the \n            Kubernetes pods and the volumes created by CSI",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "NTNX_PE_DATASERVICE_IP",
                        "value": "",
                        "label": "Data service IP address",
                        "attrs": {
                            "type": ""
                        },
                        "editables": {
                            "value": true
                        },
                        "is_hidden": false
                    },
                    {
                        "regex": {
                            "should_validate": true,
                            "value": "^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$"
                        },
                        "val_type": "STRING",
                        "is_mandatory": false,
                        "description": "",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "NTNX_PE_PORT",
                        "value": "9440",
                        "label": "Prism Element port",
                        "attrs": {
                            "type": ""
                        },
                        "is_hidden": true
                    },
                    {
                        "regex": {
                            "should_validate": true,
                            "value": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
                        },
                        "val_type": "STRING",
                        "is_mandatory": true,
                        "description": "This is needed for the CSI driver to create persistent volumes via the API",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "NTNX_PE_IP",
                        "value": "",
                        "label": "Prism Element VIP",
                        "attrs": {
                            "type": ""
                        },
                        "editables": {
                            "value": true
                        },
                        "is_hidden": false
                    },
                    {
                        "val_type": "STRING",
                        "is_mandatory": false,
                        "description": "",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "NTNX_CSI_URL",
                        "value": "http:\/\/download.nutanix.com\/csi\/v2.3.1\/csi-v2.3.1.tar.gz",
                        "label": "Nutanix CSI Driver URL. Minimum supported version is 2.3.1",
                        "attrs": {
                            "type": ""
                        },
                        "is_hidden": true
                    },
                    {
                        "regex": {
                            "should_validate": false,
                            "value": "^[\\d]*$"
                        },
                        "val_type": "INT",
                        "is_mandatory": false,
                        "description": "The minimum OS disk size MUST be 128GB, recommended by Google is 256GB",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "OS_DISK_SIZE",
                        "value": "128",
                        "label": "OS disk size",
                        "attrs": {
                            "type": ""
                        },
                        "is_hidden": true
                    },
                    {
                        "regex": {
                            "should_validate": true,
                            "value": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
                        },
                        "val_type": "STRING",
                        "is_mandatory": true,
                        "description": "If you are using a remote Prism Central instance, use the IP address of that instance. This is used to expand the OS disk via PC API.",
                        "data_type": "BASE",
                        "type": "LOCAL",
                        "name": "NTNX_PC_IP",
                        "value": "127.0.0.1",
                        "label": "Prism Central IP",
                        "attrs": {
                            "type": ""
                        },
                        "editables": {
                            "value": true
                        },
                        "is_hidden": false
                    }
                ]
            }],
            "published_service_definition_list": [],
            "default_credential_local_reference": {
                "kind": "app_credential",
                "name": "CRED_OS"
            },
            "type": "USER"
        },
        "name": "Anthos_on_AHV"
    },
    "api_version": "3.0",
    "metadata": {
        "last_update_time": "1617871862682027",
        "kind": "blueprint",
        "spec_version": 1,
        "creation_time": "1617871856766103",
        "name": "Anthos_on_AHV"
    }
}